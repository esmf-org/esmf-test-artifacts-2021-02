  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  NUMBER_OF_PROCESSORS           4
  NUMBER_OF_PROCESSORS           4
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 118
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 118
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 118
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 125
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 118
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 125
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 125
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 125
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 143
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 143
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 143
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 143
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 150
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 150
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 150
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 150
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 157
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 157
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 157
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 157
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 164
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 164
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 164
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 164
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 171
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 171
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 178
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 171
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 178
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 171
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 178
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 178
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 186
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 186
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 186
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 186
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 193
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 193
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 193
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 202
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 193
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 202
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 202
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 202
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 209
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 209
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 217
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 209
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 209
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 217
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 217
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 217
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 225
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 225
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 225
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 232
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 225
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 232
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 232
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 232
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 241
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 241
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 241
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 241
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 249
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 249
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 249
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 249
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 256
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 256
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 256
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 263
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 256
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 263
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 263
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 263
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 277
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 277
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 277
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 277
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 285
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 285
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 285
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 285
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec
 Base name    = MyArray with ArraySpec
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Proxy        = no
 Root Info (Attributes):
{}{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
{}{}DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1819c20:
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x24f8de0:
            rank = 2, typekind = 6, base_addr = 0x1819f50
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
            rank = 2, typekind = 6, base_addr = 0x24f9110
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x1099cc0:
            rank = 2, typekind = 6, base_addr = 0x1099ff0
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  0
(10,13) =  0
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x2185d00:
            rank = 2, typekind = 6, base_addr = 0x21882c0
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.73647e-316
( 2, 1) =  0
( 9, 1) =  0
(10, 1) =  0
(11, 1) =  0
(12, 1) =  0
(13, 1) =  0
(14, 1) =  0
(15, 1) =  0
( 9, 2) =  0
(10, 2) =  0
(11, 2) =  0
  skipping to end ...
( 3, 1) =  0
( 4, 1) =  2.02567e-322
( 5, 1) =  0
( 1,13) =  0
( 2,13) =  0
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,22) =  0
(14,22) =  0
(15,22) =  0
( 9,23) =  0
(10,23) =  0
(11,23) =  0
(13,11) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
(10,12) =  0
(11,12) =  0
(12,23) =  0
(13,23) =  0
(14,23) =  0
(15,23) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
( 6, 1) =  0
( 7, 1) =  1.73719e-316
( 8, 1) =  1.73718e-316
( 1, 2) =  1.73718e-316
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,22) =  0
( 8,22) =  0
( 1,23) =  0
( 2,23) =  0
( 3,23) =  0
( 4,23) =  0
( 5,23) =  0
( 6,23) =  0
(12,12) =  0
(13,12) =  0
(14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 292
( 7,23) =  0
( 8,23) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 292
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 292
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 292
 Array name: MyArray with ArraySpec                                                          
  PASS  ArrayGet arrayspec and name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 300
 Array name: MyArray with ArraySpec                                                          
  PASS  ArrayGet arrayspec and name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 300
  PASS  Verify ArraySpec returned from Array, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  Verify ArraySpec returned from Array, ESMF_ArrayCreateGetUTest.F90, line 306
 Array name: MyArray with ArraySpec                                                          
 Array name: MyArray with ArraySpec                                                          
  PASS  ArrayGet arrayspec and name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 300
  PASS  Verify name returned from Array, ESMF_ArrayCreateGetUTest.F90, line 312
  PASS  Verify name returned from Array, ESMF_ArrayCreateGetUTest.F90, line 312
  PASS  ArrayGet arrayspec and name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 300
  PASS  Verify ArraySpec returned from Array, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  Verify ArraySpec returned from Array, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  Verify name returned from Array, ESMF_ArrayCreateGetUTest.F90, line 312
  PASS  Verify name returned from Array, ESMF_ArrayCreateGetUTest.F90, line 312
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 332
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 332
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 332
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 339
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 332
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 339
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 339
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 339
  PASS  ArrayCreate from Copy (ALLOC), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
  PASS  ArrayCreate from Copy (ALLOC), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
  PASS  ArrayCreate from Copy (ALLOC), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
  PASS  ArrayCreate from Copy (ALLOC), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
 Array name: Array007                                                                        
  PASS  ArrayGet arrayspec from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 355
 Array name: Array007                                                                        
  PASS  ArrayGet arrayspec from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 355
  PASS  Verify ArraySpec returned from Array (ALLOC) Copy, ESMF_ArrayCreateGetUTest.F90, line 361
 Array name: Array007                                                                        
  PASS  ArrayGet arrayspec from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 355
  PASS  Verify ArraySpec returned from Array (ALLOC) Copy, ESMF_ArrayCreateGetUTest.F90, line 361
 Array name: Array007                                                                        
  PASS  ArrayGet arrayspec from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 355
  PASS  ArrayGet Fortran array pointer, from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 368
  PASS  ArrayGet Fortran array pointer, from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 368
  PASS  Verify ArraySpec returned from Array (ALLOC) Copy, ESMF_ArrayCreateGetUTest.F90, line 361
  PASS  Verify ArraySpec returned from Array (ALLOC) Copy, ESMF_ArrayCreateGetUTest.F90, line 361
  PASS  ArrayGet Fortran array pointer, from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 368
  PASS  ArrayGet Fortran array pointer, from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 368
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 402
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 409
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x181aba0:
            rank = 2, typekind = 6, base_addr = 0x181aed0
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  103
(10,13) =  103
(11,13) =  103
(12,13) =  103
(13,13) =  103
(14,13) =  103
(15,13) =  103
( 9,14) =  103
(10,14) =  103
(11,14) =  103
  skipping to end ...
(13,22) =  103
(14,22) =  103
(15,22) =  103
( 9,23) =  103
(10,23) =  103
(11,23) =  103
(12,23) =  103
(13,23) =  103
(14,23) =  103
(15,23) =  103
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (ALLOC) after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 416
  PASS  ArrayDestroy of Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 423
  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 402
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 409
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 431
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 438
 Proxy        = no
 Root Info (Attributes):
  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 402
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 409
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x24f9d40:
            rank = 2, typekind = 6, base_addr = 0x24fa070
--- ESMCI::Array::print start ---
 Base name    = Array007
  PASS  ArrayCreate from Copy (VALUE), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 446
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  101
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
(10, 1) =  101
(11, 1) =  101
(12, 1) =  101
(13, 1) =  101
(14, 1) =  101
(15, 1) =  101
 Array name: Array009                                                                        
  PASS  ArrayGet arrayspec from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 454
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
( 9, 2) =  101
(10, 2) =  101
(11, 2) =  101
  skipping to end ...
(13,11) =  101
LocalArrayPrint: Array at address 0x109ac40:
            rank = 2, typekind = 6, base_addr = 0x109af70
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
  PASS  Verify ArraySpec returned from Array (VALUE) Copy, ESMF_ArrayCreateGetUTest.F90, line 460
  PASS  ArrayGet Fortran array pointer, from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 467
(14,11) =  101
(15,11) =  101
( 9,12) =  101
(10,12) =  101
(11,12) =  101
( 1,13) =  102
( 2,13) =  102
( 3,13) =  102
(12,12) =  101
(13,12) =  101
(14,12) =  101
( 4,13) =  102
( 5,13) =  102
( 6,13) =  102
( 7,13) =  102
( 8,13) =  102
( 1,14) =  102
(15,12) =  101
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (ALLOC) after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 416
( 2,14) =  102
  skipping to end ...
( 7,22) =  102
( 8,22) =  102
( 1,23) =  102
  PASS  ArrayDestroy of Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 423
( 2,23) =  102
( 3,23) =  102
( 4,23) =  102
( 5,23) =  102
( 6,23) =  102
( 7,23) =  102
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 431
( 8,23) =  102
dim 1: [0]: [1 [1 [1, 8] 8] 8]
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 438
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (ALLOC) after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 416
  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 402
  PASS  ArrayDestroy of Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 423
  PASS  ArrayCreate from Copy (VALUE), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 446
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 409
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Array name: Array009                                                                        
  PASS  ArrayGet arrayspec from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 454
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 431
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 438
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
  PASS  Verify ArraySpec returned from Array (VALUE) Copy, ESMF_ArrayCreateGetUTest.F90, line 460
LocalArrayPrint: Array at address 0x2188f50:
            rank = 2, typekind = 6, base_addr = 0x2189280
  PASS  ArrayCreate from Copy (VALUE), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 446
  PASS  ArrayGet Fortran array pointer, from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 467
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  100
( 2, 1) =  100
( 3, 1) =  100
( 4, 1) =  100
( 5, 1) =  100
 Array name: Array009                                                                        
  PASS  ArrayGet arrayspec from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 454
( 6, 1) =  100
( 7, 1) =  100
( 8, 1) =  100
( 1, 2) =  100
( 2, 2) =  100
  skipping to end ...
( 7,11) =  100
( 8,11) =  100
  PASS  Verify ArraySpec returned from Array (VALUE) Copy, ESMF_ArrayCreateGetUTest.F90, line 460
( 1,12) =  100
( 2,12) =  100
( 3,12) =  100
( 4,12) =  100
( 5,12) =  100
  PASS  ArrayGet Fortran array pointer, from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 467
( 6,12) =  100
( 7,12) =  100
( 8,12) =  100
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (ALLOC) after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 416
  PASS  ArrayDestroy of Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 423
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 431
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 438
  PASS  ArrayCreate from Copy (VALUE), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 446
 Array name: Array009                                                                        
  PASS  ArrayGet arrayspec from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 454
  PASS  Verify ArraySpec returned from Array (VALUE) Copy, ESMF_ArrayCreateGetUTest.F90, line 460
  PASS  ArrayGet Fortran array pointer, from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 467
  PASS  Verify Array vs Array Copy (VALUE) data copy, ESMF_ArrayCreateGetUTest.F90, line 483
  PASS  Verify Array vs Array Copy (VALUE) data copy, ESMF_ArrayCreateGetUTest.F90, line 483
  PASS  Verify Array vs Array Copy (VALUE) data copy, ESMF_ArrayCreateGetUTest.F90, line 483
  PASS  Verify Array vs Array Copy (VALUE) data copy, ESMF_ArrayCreateGetUTest.F90, line 483
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 523
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 530
  PASS  ArrayCreate from Copy (REF), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 538
 Array name: Array011                                                                        
  PASS  ArrayGet arrayspec from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 546
  PASS  Verify ArraySpec returned from Array Copy (REF), ESMF_ArrayCreateGetUTest.F90, line 552
  PASS  ArrayGet Fortran array pointer, from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 559
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 523
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 530
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayCreate from Copy (REF), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 538
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
 Array name: Array011                                                                        
  PASS  ArrayGet arrayspec from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 546
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  Verify ArraySpec returned from Array Copy (REF), ESMF_ArrayCreateGetUTest.F90, line 552
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 523
  PASS  ArrayGet Fortran array pointer, from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 559
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 530
  PASS  ArrayCreate from Copy (REF), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 538
 Array name: Array011                                                                        
  PASS  ArrayGet arrayspec from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 546
  PASS  Verify ArraySpec returned from Array Copy (REF), ESMF_ArrayCreateGetUTest.F90, line 552
  PASS  ArrayGet Fortran array pointer, from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 559
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 523
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 530
  PASS  ArrayCreate from Copy (REF), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 538
 Array name: Array011                                                                        
  PASS  ArrayGet arrayspec from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 546
  PASS  Verify ArraySpec returned from Array Copy (REF), ESMF_ArrayCreateGetUTest.F90, line 552
  PASS  ArrayGet Fortran array pointer, from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 559
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 616
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1819e60:
            rank = 3, typekind = 5, base_addr = 0x181c620
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  4.76351e-38
(-1, 1, 3) =  0
( 0, 1, 3) =  6.65986e+32
( 1, 1, 3) =  4.58813e-41
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 623
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 630
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 637
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 644
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 653
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 660
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 671
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 678
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 689
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 696
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 616
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x24f8fe0:
            rank = 3, typekind = 5, base_addr = 0x24fb7a0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  1.52531e-37
(-1, 1, 3) =  0
( 0, 1, 3) =  6.61395e+19
( 1, 1, 3) =  4.58687e-41
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 616
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
--- ESMCI::Array::print start ---
 Base name    = MyArray
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 623
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 630
LocalArrayPrint: Array at address 0x1099ba0:
            rank = 3, typekind = 5, base_addr = 0x109c9d0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 637
(-2, 1, 3) =  2.52988e-38
(-1, 1, 3) =  0
( 0, 1, 3) =  4.19747e-16
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 644
( 1, 1, 3) =  4.56039e-41
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  4.62428e-44
( 5, 1, 3) =  0
( 6, 1, 3) =  2.52882e-38
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 708
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 715
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 653
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 623
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 725
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 660
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 630
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 637
~ lower class' values ~
DistGrid dimCount = 2
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 644
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x181cb40:
            rank = 2, typekind = 6, base_addr = 0x1819f00
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  6.94794e-310
(10,13) =  6.94794e-310
(11,13) =  2.122e-314
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 671
(12,13) =  1.32413e-310
(13,13) =  1.25047e-316
(14,13) =  1.25047e-316
(15,13) =  -nan
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 678
( 9,14) =  1.97626e-323
(10,14) =  1.63606e-311
(11,14) =  1.97626e-323
  skipping to end ...
(13,22) =  13
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 653
(14,22) =  13
(15,22) =  13
( 9,23) =  13
(10,23) =  13
(11,23) =  13
(12,23) =  13
(13,23) =  13
(14,23) =  13
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 660
(15,23) =  13
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 732
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 689
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 739
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 696
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 671
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 748
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 678
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x181cb40:
            rank = 2, typekind = 6, base_addr = 0x1819ec0
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 689
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9,13) =  6.94794e-310
(10,13) =  6.94794e-310
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 696
(11,13) =  1.50758e+161
(12,13) =  1.31837e+180
(13,13) =  1.05119e-153
(14,13) =  1.79737e-52
(15,13) =  3.16202e-322
( 9,14) =  3.08297e-321
(10,14) =  6.94794e-310
(11,14) =  6.94794e-310
  skipping to end ...
(13,23) =  13
(14,23) =  13
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 616
(15,23) =  13
( 9,24) =  13
(10,24) =  13
(11,24) =  13
(12,24) =  13
(13,24) =  13
--- ESMCI::Array::print start ---
 Base name    = MyArray
(14,24) =  13
(15,24) =  13
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
 Status: Base = Ready,  object = Ready
 Proxy        = no
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 755
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x2185d00:
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 768
            rank = 3, typekind = 5, base_addr = 0x218aa50
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 778
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  1.12047e-37
(-1, 1, 3) =  0
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 787
( 0, 1, 3) =  41.2888
( 1, 1, 3) =  4.55954e-41
( 2, 1, 3) =  4.48416e-44
( 3, 1, 3) =  0
( 4, 1, 3) =  4.48416e-44
( 5, 1, 3) =  0
( 6, 1, 3) =  0
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 708
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 708
(-1,12,10) =  0
( 0,12,10) =  0
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 715
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 715
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 797
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 725
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 725
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 623
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 630
LocalArrayPrint: Array at address 0x181cb40:
            rank = 2, typekind = 6, base_addr = 0x181ff60
            dim[0] = 11  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 8,11) =  6.94794e-310
( 9,11) =  6.94794e-310
(10,11) =  1.24982e-316
(11,11) =  1.24982e-316
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x109c9d0:
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x24fd930:
            rank = 2, typekind = 6, base_addr = 0x24fe120
            dim[0] = 7  dim[1] = 12  
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 637
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 644
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.94601e-310
(12,11) =  2.10424e+122
(13,11) =  6.21989e+88
(14,11) =  1.38497e+219
(15,11) =  9.08367e+223
(16,11) =  6.60856e+265
            rank = 2, typekind = 6, base_addr = 0x10a1fd0
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  6.90585e-310
( 2,13) =  6.90585e-310
(10, 1) =  6.94601e-310
(11, 1) =  1.91645e-316
(12, 1) =  1.91645e-316
(13, 1) =  1.9098e-313
(14, 1) =  2.3342e-313
(15, 1) =  2.75859e-313
( 9, 2) =  3.18299e-313
(17,11) =  1.30494e+180
  skipping to end ...
( 9,27) =  1.43023e-311
(10,27) =  1.43447e-311
(11,27) =  1.43871e-311
(12,27) =  1.44296e-311
(13,27) =  1.4472e-311
( 3,13) =  8.61685e-317
( 4,13) =  8.61685e-317
( 5,13) =  4.24399e-313
( 6,13) =  4.66839e-313
( 7,13) =  5.09279e-313
( 8,13) =  5.51719e-313
( 1,14) =  5.94159e-313
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 653
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 660
(14,27) =  1.47479e-311
(15,27) =  1.52571e-311
(16,27) =  1.57664e-311
(17,27) =  1.62757e-311
(18,27) =  1.63181e-311
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
(10, 2) =  3.60739e-313
(11, 2) =  4.03179e-313
  skipping to end ...
(13,11) =  3.60739e-313
(14,11) =  4.03179e-313
(15,11) =  4.45619e-313
( 9,12) =  4.88059e-313
(10,12) =  5.30499e-313
( 2,14) =  6.36599e-313
  skipping to end ...
( 7,22) =  7.63918e-313
( 8,22) =  8.06358e-313
( 1,23) =  8.48798e-313
( 2,23) =  8.91238e-313
( 3,23) =  9.33678e-313
(11,12) =  5.72939e-313
(12,12) =  6.15379e-313
(13,12) =  6.57819e-313
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 804
( 4,23) =  9.76118e-313
( 5,23) =  1.01856e-312
( 6,23) =  1.061e-312
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 671
(14,12) =  7.00259e-313
(15,12) =  7.42699e-313
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
( 7,23) =  1.10344e-312
( 8,23) =  1.14588e-312
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 816
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 732
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 732
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 739
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 824
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 678
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 739
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 846
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 689
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 855
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 696
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 748
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 864
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x24fd930:
            rank = 2, typekind = 6, base_addr = 0x24fe120
            dim[0] = 7  dim[1] = 12  
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x109c9d0:
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.94601e-310
(10, 1) =  6.94601e-310
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
            rank = 2, typekind = 6, base_addr = 0x10a2860
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1,13) =  6.90585e-310
( 2,13) =  6.90585e-310
(11, 1) =  1.91645e-316
(12, 1) =  1.91645e-316
(13, 1) =  1.9098e-313
(14, 1) =  2.3342e-313
(15, 1) =  2.75859e-313
( 3,13) =  8.61794e-317
( 4,13) =  8.61794e-317
( 9, 2) =  3.18299e-313
(10, 2) =  3.60739e-313
(11, 2) =  4.03179e-313
  skipping to end ...
( 5,13) =  6.01347e-154
( 6,13) =  6.01347e-154
( 7,13) =  6.01347e-154
( 8,13) =  6.01347e-154
( 1,14) =  6.01347e-154
(13,11) =  3.60739e-313
(14,11) =  4.03179e-313
(15,11) =  4.45619e-313
( 9,12) =  4.88059e-313
( 2,14) =  6.01347e-154
  skipping to end ...
( 7,23) =  1.65516e-311
(10,12) =  5.30499e-313
(11,12) =  5.72939e-313
(12,12) =  6.15379e-313
( 8,23) =  1.6594e-311
( 1,24) =  1.66364e-311
( 2,24) =  1.66789e-311
( 3,24) =  1.67213e-311
(13,12) =  6.57819e-313
(14,12) =  7.00259e-313
(15,12) =  7.42699e-313
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
( 4,24) =  1.67638e-311
( 5,24) =  1.68062e-311
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 755
( 6,24) =  1.68486e-311
( 7,24) =  1.68911e-311
( 8,24) =  1.69335e-311
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 708
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 715
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 755
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 768
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 778
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 768
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 725
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 787
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 778
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 787
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x218e3d0:
            rank = 2, typekind = 6, base_addr = 0x218e700
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 797
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.9046e-310
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
( 2, 1) =  6.9046e-310
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  3.33153e-312
 Proxy        = no
 Root Info (Attributes):
{}  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 797
( 6, 1) =  3.37397e-312
( 7, 1) =  3.41641e-312
( 8, 1) =  3.45885e-312
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x24fd930:
            rank = 2, typekind = 6, base_addr = 0x24fe120
( 1, 2) =  3.50129e-312
( 2, 2) =  3.54373e-312
  skipping to end ...
( 7,11) =  4.01057e-312
( 8,11) =  4.05301e-312
            dim[0] = 11  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 8,-1) =  6.94601e-310
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
( 1,12) =  4.09545e-312
( 2,12) =  4.13789e-312
( 3,12) =  4.18033e-312
( 4,12) =  4.22277e-312
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x109c9d0:
            rank = 2, typekind = 6, base_addr = 0x109ef10
            dim[0] = 12  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 9,-1) =  6.94601e-310
(10,-1) =  1.91645e-316
(11,-1) =  1.91645e-316
(12,-1) =  1.9098e-313
(13,-1) =  2.3342e-313
(14,-1) =  2.75859e-313
(15,-1) =  3.18299e-313
(16,-1) =  3.60739e-313
(17,-1) =  4.03179e-313
( 5,12) =  4.26521e-312
( 6,12) =  4.30765e-312
( 7,12) =  4.35009e-312
( 8,12) =  4.39253e-312
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  skipping to end ...
( 9,16) =  1.05463e-311
( 0,11) =  6.90585e-310
( 1,11) =  6.90585e-310
( 2,11) =  8.61069e-317
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 732
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 739
(10,16) =  1.05888e-311
(11,16) =  1.06312e-311
(12,16) =  1.06736e-311
(13,16) =  1.07161e-311
(14,16) =  1.07585e-311
(15,16) =  0
(16,16) =  1.26975e-321
( 3,11) =  8.61069e-317
( 4,11) =  0
( 5,11) =  0
( 6,11) =  0
( 7,11) =  0
( 8,11) =  0
( 9,11) =  0
  skipping to end ...
(17,16) =  6.94601e-310
(18,16) =  6.94601e-310
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
( 2,27) =  0
( 3,27) =  0
( 4,27) =  0
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 804
( 5,27) =  0
( 6,27) =  0
( 7,27) =  0
( 8,27) =  0
( 9,27) =  0
(10,27) =  0
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 748
(11,27) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 816
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 804
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 824
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 816
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x218eed0:
            rank = 2, typekind = 6, base_addr = 0x218e3d0
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 838
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.9046e-310
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 855
( 2, 1) =  6.9046e-310
( 3, 1) =  1.7384e-316
( 4, 1) =  1.7384e-316
( 5, 1) =  0
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 824
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 842
( 6, 1) =  2.122e-314
( 7, 1) =  2.122e-314
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 864
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 855
( 8, 1) =  2.122e-314
( 1, 2) =  2.122e-314
( 2, 2) =  2.54639e-313
  skipping to end ...
( 7,11) =  4.45619e-313
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
( 8,11) =  4.88059e-313
( 1,12) =  5.30499e-313
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 864
( 2,12) =  5.72939e-313
( 3,12) =  6.15379e-313
( 4,12) =  6.57819e-313
( 5,12) =  7.00259e-313
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
( 6,12) =  7.42699e-313
( 7,12) =  7.85138e-313
( 8,12) =  8.27578e-313
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 755
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 768
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 778
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 787
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 797
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x218aa50:
            rank = 2, typekind = 6, base_addr = 0x218c570
            dim[0] = 12  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 0,-1) =  6.9046e-310
( 1,-1) =  6.9046e-310
( 2,-1) =  1.73802e-316
( 3,-1) =  1.73802e-316
( 4,-1) =  0
( 5,-1) =  0
( 6,-1) =  0
( 7,-1) =  0
( 8,-1) =  0
( 9,-1) =  0
  skipping to end ...
( 2,16) =  0
( 3,16) =  0
( 4,16) =  0
( 5,16) =  0
( 6,16) =  0
( 7,16) =  0
( 8,16) =  0
( 9,16) =  0
(10,16) =  0
(11,16) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 804
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 816
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 824
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 834
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 855
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 864
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 925
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 925
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 925
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 925
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 944
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 944
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 944
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 944
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 979
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 979
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 979
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 979
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1166
  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1166
  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1166
  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1177
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x218eed0:
            rank = 2, typekind = 6, base_addr = 0x7f1a45ebd108
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1177
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x10a5e20:
            rank = 2, typekind = 6, base_addr = 0x7f2029b8c108
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  20
( 2,13) =  20
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1185
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 3,13) =  20
( 4,13) =  20
( 5,13) =  20
( 6,13) =  20
( 7,13) =  20
( 8,13) =  20
( 1,14) =  20
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1185
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1204
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1204
( 2,14) =  20
  skipping to end ...
( 7,22) =  20
( 8,22) =  20
( 1,23) =  20
( 2,23) =  20
( 3,23) =  20
( 4,23) =  20
( 5,23) =  20
( 6,23) =  20
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x2192940:
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
( 7,23) =  20
( 8,23) =  20
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x10a0520:
            rank = 2, typekind = 6, base_addr = 0x7f2029b8d108
            dim[0] = 7  dim[1] = 11  
            rank = 2, typekind = 6, base_addr = 0x7f1a45ebe108
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
  Real, *8, Dim 2, Data values:
( 9,13) =  30
(10,13) =  30
( 9, 1) =  10
(10, 1) =  10
(11, 1) =  10
(12, 1) =  10
(13, 1) =  10
(14, 1) =  10
(15, 1) =  10
(11,13) =  30
(12,13) =  30
(13,13) =  30
(14,13) =  30
(15,13) =  30
( 9,14) =  30
(10,14) =  30
(11,14) =  30
( 9, 2) =  10
(10, 2) =  10
(11, 2) =  10
  skipping to end ...
  skipping to end ...
(13,22) =  30
(14,22) =  30
(15,22) =  30
( 9,23) =  30
(13,11) =  10
(14,11) =  10
(15,11) =  10
( 9,12) =  10
(10,12) =  10
(10,23) =  30
(11,23) =  30
(12,23) =  30
(13,23) =  30
(14,23) =  30
(11,12) =  10
(12,12) =  10
(13,12) =  10
(15,23) =  30
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
(14,12) =  10
(15,12) =  10
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1177
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1177
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1185
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1185
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1204
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1204
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x109c9d0:
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x24fe360:
            rank = 1, typekind = 6, base_addr = 0x7ffeb6dd79e0
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1828cd0:
            rank = 1, typekind = 6, base_addr = 0x7ffdf11d34b0
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x2192940:
            rank = 1, typekind = 6, base_addr = 0x7ffdf3c21830
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
            rank = 1, typekind = 6, base_addr = 0x7ffebe9805a0
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1333
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1333
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1333
{}Array typekind/rank: Real*8 / 1 
 Proxy        = no
 Root Info (Attributes):
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1828c30:
            rank = 1, typekind = 6, base_addr = 0x7ffdf11d34b0
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x24fe360:
            rank = 1, typekind = 6, base_addr = 0x7ffeb6dd79e0
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x10a0520:
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x2192940:
            rank = 1, typekind = 6, base_addr = 0x7ffdf3c21830
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
            rank = 1, typekind = 6, base_addr = 0x7ffebe9805a0
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 9] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1340
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1340
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [2 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1340
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1340
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1387
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1387
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1387
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1387
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1406
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1406
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1406
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1406
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1446
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1446
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1446
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1446
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1514
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1514
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1514
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1514
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1543
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1543
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1543
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1543
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Root Info (Attributes):
{}  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
--- ESMCI::Array::print start ---
 Base name    = MyArray
--- ESMCI::Array::print start ---
 Base name    = MyArray
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1576
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 1
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1576
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x2195f50:
            rank = 1, typekind = 6, base_addr = 0x218ef50
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1592
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1576
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1592
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1599
            dim[0] = 4  
  Real, *8, Dim 1, Data values:
( 1) =  1.73854e-316
( 2) =  6.32404e-322
( 3) =  0
( 4) =  0
dim 1: [0]: [1 [1 [1, 4] 4] 4]
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1599
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1592
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1627
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1576
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1599
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1627
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1592
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1627
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1599
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1627
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
  PET           3  Test Elapsed Time    30.686999999999998       msec.
  PET           2  Test Elapsed Time    30.166999999999991       msec.
  PET           1  Test Elapsed Time    30.567999999999998       msec.
  PET           0  Test Elapsed Time    30.183999999999994       msec.
Thu Feb 25 03:52:37 MST 2021
