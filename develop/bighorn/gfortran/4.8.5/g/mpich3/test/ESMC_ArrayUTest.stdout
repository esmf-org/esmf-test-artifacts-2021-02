Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
Beginning Test, file ESMC_ArrayUTest.C, line 46
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = array1 Base name    = array1

 Status: Base = Ready Status: Base = Ready,  object = Ready
,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Proxy        = no
 Root Info (Attributes):
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = array1 Base name    = array1

 Status: Base =  Status: Base = Ready,  object = Ready,  object = Ready
 Proxy        = Ready
 Proxy        = no
 Root Info (Attributes):no
 Root Info (Attributes):

{}{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x19ec030:
            rank = 2, typekind = 3, LocalArrayPrint: Array at address 0x1e13020:
            rank = 2, typekind = 3, base_addr = 0x1e10160
            dim[0] = 1  base_addr = 0x19ebbd0
            dim[0] = 2  dim[1] = 10  
{}dim[1] = 10  
  Integer, *4, Dim 2, Data values:
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~  Integer, *4, Dim 2, Data values:
( 1, 1) =  -1195194264
( 2, 1) =  32758
( 1, 2) =  -1195194264
( 2, 2) =  32758
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
( 1, 1) =  -160217112
( 1, 2) =  32556
( 1, 3) =  -160217112
( 1, 4) =  32556
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  31533616

DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xc2e020:
( 1, 3) =  0
( 2, 3) =  0
( 1, 4) =  161
( 2, 4) =  0
( 1, 5) =  27179536
( 2, 5) =  0
( 1, 6) =  -1195194440
( 2, 6) =  32758
( 1, 7) =  4
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x2349020:
            rank = 2, typekind = 3, base_addr = 0x2346160
            dim[0] = 1  ( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
            rank = 2, typekind = 3, base_addr = 0xc2b160
            dim[0] = 1  dim[1] = 10  
( 2, 7) =  10
( 1, 8) =  5
( 2, 8) =  10
( 1, 9) =  0
( 2, 9) =  0
( 1,10) =  113
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -353044504
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -3209240
( 1, 2) =  32678
--- ESMCI::Array::print end ---
( 1, 2) =  32512
( 1, 3) =  -353044504
( 1, 4) =  32512
( 1, 5) =  1159736436
( 1, 3) =  -3209240
( 1, 4) =  32678
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  36997680
( 1,10) =  0
( 1, 8) =  0
( 1, 9) =  12769840
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 2 Test Elapsed Time  2.685000 msec.
 PET 1 Test Elapsed Time  2.841000 msec.
 PET 0 Test Elapsed Time  2.984000 msec.
 PET 3 Test Elapsed Time  3.043000 msec.
