Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
Beginning Test, file ESMC_ArrayUTest.C, line 46
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = array1--- ESMCI::Array::print start ---
 Base name    = array1PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
 Base name    = array1
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
 Base name    = array1
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{}{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xddb040:
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1406040:
            rank = 2, typekind = 3, base_addr = 0x1403180
            dim[0] = 1  dim[1] = 10  LocalArrayPrint: Array at address 0x1cab040:
            rank = 2, typekind = 3, base_addr = 0x1ca8180
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
            rank = 2, typekind = 3, base_addr = 0xdd8180
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -1576806424

  Integer, *4, Dim 2, Data values:
( 1, 1) =  1691662312
( 1, 2) =  32661
( 1, 3) =  1691662312
( 1, 4) =  32661
( 1, 1) =  1711626216
( 1, 2) =  32745
( 1, 3) =  1711626216
( 1, 4) =  32745
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 2) =  32614
( 1, 3) =  -1576806424
( 1, 4) =  32614
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  14527056
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  20994640
( 1,10) =  0
( 1, 8) =  0
( 1, 9) =  30059088
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
{}dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---

Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x200e050:
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
            rank = 2, typekind = 3, base_addr = 0x200dbf0
            dim[0] = 2  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -1632782232
( 2, 1) =  32552
( 1, 2) =  -1632782232
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
( 2, 2) =  32552
( 1, 3) =  0
( 2, 3) =  0
( 1, 4) =  161
( 2, 4) =  0
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
( 1, 5) =  33610288
( 2, 5) =  0
( 1, 6) =  -1632782408
( 2, 6) =  32552
( 1, 7) =  4
( 2, 7) =  10
( 1, 8) =  5
( 2, 8) =  10
( 1, 9) =  0
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
( 2, 9) =  0
( 1,10) =  113
( 2,10) =  0
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 1 Test Elapsed Time  2.909000 msec.
 PET 3 Test Elapsed Time  3.269000 msec.
 PET 2 Test Elapsed Time  3.400000 msec.
 PET 0 Test Elapsed Time  3.954000 msec.
Mon Nov 23 04:53:57 MST 2020
