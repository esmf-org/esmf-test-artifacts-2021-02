Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
Beginning Test, file ESMC_ArrayUTest.C, line 46
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = array1 Base name    = array1

 Status: Base = Ready,  Status: Base = Ready,  object = Ready
 Proxy        = no object = Ready
 Proxy        = no
 Root Info (Attributes):
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96

 Root Info (Attributes):
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = array1 Base name    = array1

 Status: Base =  Status: Base = Ready,  object = Ready,  object = Ready
 Proxy        = Ready
 Proxy        = no
 Root Info (Attributes):no
 Root Info (Attributes):

{}{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x973030:
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x777020:
            rank = 2, typekind = 3, base_addr = 0x774160
            rank = 2, typekind = 3, base_addr = 0x972bd0
            dim[0] = 2  dim[1] = 10  
{}{}            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -824645656
( 1, 2) =  32545
( 1, 3) =  -824645656
  Integer, *4, Dim 2, Data values:
( 1, 1) =  523208808
( 2, 1) =  32603
( 1, 2) =  523208808
( 2, 2) =  32603
( 1, 3) =  0
( 2, 3) =  0
( 1, 4) =  161
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
( 1, 4) =  32545
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  7825968
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
( 2, 4) =  0
( 1, 5) =  9906704
( 2, 5) =  0
( 1, 6) =  523208632
( 2, 6) =  32603
( 1, 7) =  4
( 2, 7) =  10
( 1, 8) =  5
( 2, 8) =  10
( 1, 9) =  0
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1fd7020:
            rank = 2, typekind = 3, base_addr = 0x1fd4160
            ~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xf44020:
            rank = 2, typekind = 3, base_addr = 0xf41160
            dim[0] = 1  dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 2, 9) =  0
( 1,10) =  113
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  1724381160
dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  1522178024
( 1, 2) =  32680
( 1, 2) =  32538
( 1, 3) =  1724381160
( 1, 4) =  32538
( 1, 3) =  1522178024
( 1, 4) =  32680
( 1, 5) =  1159736436
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  16005680
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
( 1, 9) =  33385008
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 3 Test Elapsed Time  2.625000 msec.
 PET 0 Test Elapsed Time  2.738000 msec.
 PET 2 Test Elapsed Time  2.969000 msec.
 PET 1 Test Elapsed Time  3.114000 msec.
