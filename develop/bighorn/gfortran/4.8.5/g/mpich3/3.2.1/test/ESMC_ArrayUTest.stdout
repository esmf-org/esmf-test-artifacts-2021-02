Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
NUMBER_OF_PROCESSORS 4
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
Beginning Test, file ESMC_ArrayUTest.C, line 46
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
NUMBER_OF_PROCESSORS 4
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
 Base name    = array1 Base name    = array1--- ESMCI::Array::print start ---

 Status: Base = 
 Status: Base = Ready,  object =  Base name    = array1Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
Ready
 Proxy        = no
 Root Info (Attributes):
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---

 Status: Base = Ready,  object =  Base name    = array1Ready
 Proxy        = no
 Root Info (Attributes):

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{}{}{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xb4f020:
            rank = 2, typekind = 3, Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1fc4020:
            rank = 2, typekind = 3, LocalArrayPrint: Array at address 0x2240020:
            rank = 2, typekind = 3, base_addr = 0x223d160
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
base_addr = 0xb4c160
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  1475360744
LocalArrayPrint: Array at address 0x15ba030:
            rank = 2, typekind = 3, base_addr = 0x15b9bd0
            dim[0] = 2  dim[1] = 10  
base_addr = 0x1fc1160
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -1969829912
( 1, 2) =  32511
( 1, 3) =  -1969829912
( 1, 4) =  32511
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  35912240
( 1,10) =  0
( 1, 2) =  32572
( 1, 3) =  1475360744
( 1, 4) =  32572
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  11856432
( 1,10) =  0
  Integer, *4, Dim 2, Data values:
( 1, 1) =  313735272
( 2, 1) =  32715
( 1, 2) =  313735272
( 2, 2) =  32715
( 1, 1) =  1640130536
( 1, 2) =  32524
( 1, 3) =  1640130536
( 1, 4) =  32524
( 1, 5) =  1159736436
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 1, 3) =  0
( 2, 3) =  0
( 1, 4) =  161
( 2, 4) =  0
( 1, 5) =  22780432
( 2, 5) =  0
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  33307184
( 1,10) =  0
( 1, 6) =  313735096
( 2, 6) =  32715
( 1, 7) =  4
( 2, 7) =  10
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
( 1, 8) =  5
( 2, 8) =  10
( 1, 9) =  0
( 2, 9) =  0

PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
( 1,10) =  113
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 2 Test Elapsed Time  2.779000 msec.
 PET 3 Test Elapsed Time  2.804000 msec.
 PET 0 Test Elapsed Time  2.861000 msec.
 PET 1 Test Elapsed Time  3.476000 msec.
