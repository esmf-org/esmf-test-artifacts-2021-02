Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
Beginning Test, file ESMC_ArrayUTest.C, line 46
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
NUMBER_OF_PROCESSORS 4
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
 Base name    = --- ESMCI::Array::print start ---
 Base name    = array1--- ESMCI::Array::print start ---
 Base name    = array1--- ESMCI::Array::print start ---
 Base name    = array1
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
array1
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{}{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xe01030:
            rank = 2, typekind = 3, base_addr = 0xe00bd0
            Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1a4b020:
            rank = 2, typekind = 3, base_addr = 0x1a48160
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x22d9020:
            rank = 2, typekind = 3, base_addr = 0x22d6160
            dim[0] = 1  ~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1ae4020:
            rank = 2, typekind = 3, base_addr = 0x1ae1160
            dim[0] = 1  dim[1] = 10  
dim[0] = 2  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  1919359080
( 2, 1) =  32574
( 1, 2) =  1919359080
( 2, 2) =  32574
( 1, 3) =  0
( 2, 3) =  0
( 1, 4) =  161
( 2, 4) =  0
( 1, 5) =  14682640
( 2, 5) =  0
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -1742882840
( 1, 2) =  32609
( 1, 3) =  -1742882840
dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -301402136
( 1, 2) =  32582
( 1, 3) =  -301402136
( 1, 4) =  32582
( 1, 5) =  1159736436
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -469342232
( 1, 2) =  32637
( 1, 3) =  -469342232
( 1, 4) =  32637
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 6) =  1919358904
( 2, 6) =  32574
( 1, 7) =  4
( 2, 7) =  10
( 1, 8) =  5
( 2, 8) =  10
( 1, 9) =  0
( 2, 9) =  0
( 1,10) =  113
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 1, 4) =  32609
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  27568688
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  36538928
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 1, 8) =  0
( 1, 9) =  28195376
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 0 Test Elapsed Time  3.268000 msec.
 PET 3 Test Elapsed Time  3.268000 msec.
 PET 1 Test Elapsed Time  3.364000 msec.
 PET 2 Test Elapsed Time  3.575000 msec.
