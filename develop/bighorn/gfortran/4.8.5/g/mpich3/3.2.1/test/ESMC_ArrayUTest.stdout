Beginning Test, file ESMC_ArrayUTest.C, line 46
Beginning Test, file ESMC_ArrayUTest.C, line 46
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = array1--- ESMCI::Array::print start ---
 Base name    = array1--- ESMCI::Array::print start ---
 Base name    = array1
 Base name    = array1
 Status: Base = 
 Status: Base = Ready,  object = Ready
 Proxy        = 
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
no
 Root Info (Attributes):
 Root Info (Attributes):
{}{}{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x6a5040:
            rank = 2, typekind = 3, base_addr = 0x6a2180
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xe78050:
            rank = 2, typekind = 3, base_addr = 0xe77bf0
            dim[0] = 2  dim[1] = 10  ~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x7ec040:
            rank = 2, typekind = 3, base_addr = 0x7e9180
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x135d040:
            rank = 2, typekind = 3, base_addr = 0x135a180
                        dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  1161246696
( 1, 2) =  32529
( 1, 3) =  1161246696
( 1, 4) =  32529

  Integer, *4, Dim 2, Data values:
( 1, 1) =  956708968
( 2, 1) =  32631
( 1, 2) =  956708968
( 2, 2) =  32631
( 1, 3) =  0
( 2, 3) =  0
( 1, 4) =  161
( 1, 1) =  -1556391960
( 1, 2) =  32704
( 1, 3) =  -1556391960
( 1, 4) =  32704
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  8305232
dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -1910417432
( 1, 2) =  32657
( 1, 3) =  -1910417432
( 1, 4) =  32657
( 1, 5) =  1159736436
( 1, 5) =  1159736436
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  6965840
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 2, 4) =  0
( 1, 5) =  15170096
( 2, 5) =  0
( 1, 6) =  956708792
( 2, 6) =  32631
( 1, 7) =  4
( 2, 7) =  10
( 1, 8) =  5
( 2, 8) =  10
( 1, 9) =  0
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 1, 6) =  1598246227
( 1, 7) =  33
( 1, 8) =  0
( 1, 9) =  20302416
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 2, 9) =  0
( 1,10) =  113
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 3 Test Elapsed Time  2.597000 msec.
 PET 1 Test Elapsed Time  2.790000 msec.
 PET 0 Test Elapsed Time  3.104000 msec.
 PET 2 Test Elapsed Time  3.189000 msec.
Sun Nov 15 04:58:09 MST 2020
