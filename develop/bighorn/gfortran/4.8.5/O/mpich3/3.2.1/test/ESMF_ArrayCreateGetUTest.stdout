  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 96
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 96
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 96
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 96
  NUMBER_OF_PROCESSORS           4
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 117
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 117
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 117
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 124
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 124
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 124
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 117
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 124
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 142
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 149
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 142
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 149
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 142
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 149
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 156
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 156
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 156
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 163
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 163
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 163
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 170
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 170
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 170
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 177
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 177
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 142
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 177
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 185
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 149
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 185
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 185
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 192
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 192
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 192
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 201
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 201
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 156
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 201
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 208
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 208
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 208
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 216
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 216
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 216
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 224
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 231
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 163
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 170
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 224
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 231
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 224
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 231
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 177
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 240
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 240
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 185
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 240
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 248
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 192
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 248
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 248
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 201
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 255
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 255
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 255
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 262
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 262
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 262
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 208
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 216
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 224
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 276
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 276
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 276
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 231
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 284
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 284
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 284
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    =  Base name    = MyArray with ArraySpec
 Base name    = MyArray with ArraySpec
MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        =  Status: Base = Ready,  object = Ready
 Proxy        =  Status: Base = Ready,  object = Ready
 Proxy        = nono
 Root Info (Attributes):
no
 Root Info (Attributes):

 Root Info (Attributes):
{}{}{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x1b2c070:
            rank = 2, typekind = 6, Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xd370e0:
            rank = 2, typekind = 6, base_addr = 0xd37410
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
base_addr = 0x1b2c3a0
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
LocalArrayPrint: Array at address 0x21d0f00:
            rank = 2, typekind = 6, base_addr = 0x21d1230
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 1,13) =  0
( 2,13) =  0
( 3,13) =  0
( 4,13) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 9,13) =  0
(10,13) =  0
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,22) =  0
( 8,22) =  0
( 1,23) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,22) =  0
(14,22) =  0
(15,22) =  0
( 9,23) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  3.55574e-319
( 5,12) =  0
( 6,12) =  0
( 2,23) =  4.17233e-319
( 3,23) =  0
( 4,23) =  4.17154e-319
( 5,23) =  0
( 6,23) =  0
(10,23) =  0
(11,23) =  0
(12,23) =  0
(13,23) =  0
(14,23) =  0
(15,23) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
( 7,23) =  0
( 8,23) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 291
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 291
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 291
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 240
 Array name: MyArray with ArraySpec                                                          
 Array name: MyArray with ArraySpec                                                          
  PASS  ArrayGet name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 299
  PASS  ArrayGet name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 299
 Array name: MyArray with ArraySpec                                                          
  PASS  ArrayGet name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 299
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 248
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 255
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 262
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 313
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 313
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 313
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 276
  PASS  ArrayCreate from Copy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 333
  PASS  ArrayCreate from Copy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 333
  PASS  ArrayCreate from Copy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 333
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 340
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 340
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 340
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready, --- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = --- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 284
Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
 object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xd38120:
            rank = 2, typekind = 6, ~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x1b2d070:
            rank = 2, typekind = 6, base_addr = 0x1b2d3a0
            Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x21d1fe0:
            rank = 2, typekind = 6, base_addr = 0x21d2310
base_addr = 0xd38450
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  0
( 2,13) =  0
( 3,13) =  0
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  0
(10,13) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
--- ESMCI::Array::print start ---
 Base name    =   skipping to end ...
( 7,22) =  0
( 8,22) =  0
( 1,23) =  0
( 2,23) =  4.17233e-319
( 3,23) =  0
( 4,23) =  4.17154e-319
( 5,23) =  0
(11,14) =  0
  skipping to end ...
(13,22) =  0
(14,22) =  0
(15,22) =  0
( 9,23) =  0
(10,23) =  0
(11,23) =  0
(12,23) =  0
( 4,12) =  3.55574e-319
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
MyArray with ArraySpec
 Status: Base = ( 6,23) =  0
( 7,23) =  0
( 8,23) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
(13,23) =  0
(14,23) =  0
(15,23) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
  PASS  ArrayPrint from Copy after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 354
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 354
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 354
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13ae1b0:
            rank = 2, typekind = 6, base_addr = 0x13ae4e0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  0
(10, 1) =  0
(11, 1) =  0
(12, 1) =  0
(13, 1) =  0
(14, 1) =  0
(15, 1) =  0
( 9, 2) =  0
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 363
(10, 2) =  0
(11, 2) =  0
  skipping to end ...
(13,11) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 363
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready, (10,12) =  0
(11,12) =  0
(12,12) =  0
(13,12) =  0
 object = Ready
 Proxy        = no
 Root Info (Attributes):
(14,12) =  0
(15,12) =  0
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 363
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xd370e0:
            rank = 3, typekind = 5, base_addr = 0xd388e0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 291
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x1b2c070:
            rank = 3, typekind = 5, base_addr = 0x1b2d7f0
(-2, 1, 3) =  8.30273e+11
(-1, 1, 3) =  10.0079
( 0, 1, 3) =  7.31618e+34
( 1, 1, 3) =  7.71351e+31
( 2, 1, 3) =  2.1128e-19
( 3, 1, 3) =  160.4
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~( 4, 1, 3) =  2.11283e-19
( 5, 1, 3) =  7.71352e+31
( 6, 1, 3) =  8.46648e+11
(-2, 2, 3) =  13.9547
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-2, 1, 3) =  8.30273e+11
(-1, 1, 3) =  10.0079
( 0, 1, 3) =  7.31618e+34
( 1, 1, 3) =  7.71351e+31
( 2, 1, 3) =  2.1128e-19
( 3, 1, 3) =  160.4

DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x21d0f00:
            rank = 3, typekind = 5, base_addr = 0x21d26c0
            dim[0] = 9  dim[1] = 12  (-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
( 4, 1, 3) =  2.11283e-19
( 5, 1, 3) =  7.71352e+31
( 6, 1, 3) =  8.46648e+11
(-2, 2, 3) =  13.9547
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  8.30273e+11
(-1, 1, 3) =  10.0079
( 0, 1, 3) =  7.31618e+34
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 370
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
( 1, 1, 3) =  7.71351e+31
( 2, 1, 3) =  2.1128e-19
( 3, 1, 3) =  160.4
( 4, 1, 3) =  2.11283e-19
( 5, 1, 3) =  7.71352e+31
( 6, 1, 3) =  8.46648e+11
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
(-2, 2, 3) =  13.9547
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 377
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 370
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 384
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 370
 Array name: MyArray with ArraySpec                                                          
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 377
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 391
  PASS  ArrayGet name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 299
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 377
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 391
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 391
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 400
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 407
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 400
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 407
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 418
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 425
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 400
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 418
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 407
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 436
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 443
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 425
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 313
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 436
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 418
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 443
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 425
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  ArrayCreate from Copy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 333
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 436
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 455
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 443
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 462
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 340
--- ESMCI::Array::print start ---
 Base name    = Array007  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 472

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = 
Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
{}Array typekind/rank: Real*8 / 2 
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xd370e0:
LocalArrayPrint: Array at address 0x13af0f0:
            rank = 2, typekind = 6, base_addr = 0x13af420
            rank = 2, typekind = 6, base_addr = 0xd3c070
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
            dim[0] = 7  dim[1] = 12  
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 455
( 1, 1) =  6.89924e-310
( 2, 1) =  6.89924e-310
( 3, 1) =  6.85632e-317
( 4, 1) =  6.85632e-317
  Real, *8, Dim 2, Data values:
( 9, 1) =  0
(10, 1) =  0
( 5, 1) =  1.50758e+161
( 6, 1) =  1.31837e+180
(11, 1) =  0
(12, 1) =  0
(13, 1) =  0
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 462
( 7, 1) =  1.05119e-153
( 8, 1) =  8.23578e-67
( 1, 2) =  2.17657e+59
( 2, 2) =  7.16395e-322
  skipping to end ...
(14, 1) =  0
(15, 1) =  0
( 9, 2) =  0
( 7,11) =  1.03978e-312
( 8,11) =  1.08222e-312
( 1,12) =  1.12466e-312
( 2,12) =  1.1671e-312
(10, 2) =  0
(11, 2) =  0
  skipping to end ...
(13,11) =  0
( 3,12) =  1.20954e-312
( 4,12) =  1.25198e-312
( 5,12) =  3.33153e-312
(14,11) =  0
(15,11) =  0
( 9,12) =  0
( 6,12) =  3.37397e-312
( 7,12) =  3.41641e-312
( 8,12) =  3.45885e-312
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
(10,12) =  0
(11,12) =  0
(12,12) =  0
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 472
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 479
(13,12) =  0
(14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ------ ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = 
Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 486
  PASS  ArrayPrint from Copy after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347

{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x1b2c070:
            rank = 2, typekind = 6, base_addr = 0x1b30880
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  6.94476e-310
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 354
( 2,13) =  6.94476e-310
( 3,13) =  1.4086e-316
( 4,13) =  1.4086e-316
( 5,13) =  1.40838e-316
( 6,13) =  6.94476e-310
( 7,13) =  0
( 8,13) =  0
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 495
( 1,14) =  6.94476e-310
( 2,14) =  6.94476e-310
  skipping to end ...
( 7,22) =  0
( 8,22) =  0
( 1,23) =  0
( 2,23) =  0
--- ESMCI::Array::print start ---
( 3,23) =  0
( 4,23) =  0
( 5,23) =  0
( 6,23) =  0
( 7,23) =  0
( 8,23) =  0
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 479
no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xd370e0:
            rank = 2, typekind = 6, base_addr = 0xd3c070
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 486
( 1, 1) =  6.89924e-310
( 2, 1) =  6.89924e-310
( 3, 1) =  6.85632e-317
( 4, 1) =  6.85632e-317
( 5, 1) =  1.50758e+161
( 6, 1) =  1.31837e+180
( 7, 1) =  1.05119e-153
( 8, 1) =  8.23578e-67
( 1, 2) =  2.17657e+59
( 2, 2) =  7.16395e-322
  skipping to end ...
( 7,11) =  1.03978e-312
( 8,11) =  1.08222e-312
( 1,12) =  1.12466e-312
( 2,12) =  1.1671e-312
( 3,12) =  1.20954e-312
( 4,12) =  1.25198e-312
( 5,12) =  3.33153e-312
( 6,12) =  3.37397e-312
( 7,12) =  3.41641e-312
( 8,12) =  3.45885e-312
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 495
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 502
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 455
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 462

DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x1b2c070:
            rank = 2, typekind = 6, base_addr = 0x1b2f4c0
            dim[0] = 8  dim[1] = 12    PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 515

  Real, *8, Dim 2, Data values:
( 1,13) =  6.94476e-310
( 2,13) =  6.94476e-310
( 3,13) =  8.8876e+252
( 4,13) =  8.19845e+06
( 5,13) =  1.50758e+161
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 525
( 6,13) =  1.31837e+180
( 7,13) =  1.05119e-153
( 8,13) =  1.65608e-47
( 1,14) =  3.95253e-322
( 2,14) =  3.95253e-322
  skipping to end ...
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 472
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 534
( 7,23) =  0
( 8,23) =  0
( 1,24) =  0
( 2,24) =  2.52962e-321
( 3,24) =  2.52962e-321
( 4,24) =  6.95272e-310
( 5,24) =  1.08646e-311
( 6,24) =  0
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 363
( 7,24) =  0
( 8,24) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 502
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x21d4470:
            rank = 2, typekind = 6, base_addr = 0x21d4c50
            dim[0] = 7  dim[1] = 11  --- ESMCI::Array::print start ---

  Real, *8, Dim 2, Data values:
( 9,13) =  6.90977e-310
(10,13) =  6.90977e-310
 Base name    = MyArray
 Status: Base = Ready,  object = (11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
Ready
 Proxy        = no
 Root Info (Attributes):(15,13) =  2.122e-314
( 9,14) =  4.94066e-324
(10,14) =  9.88131e-324
(11,14) =  0

{}  skipping to end ...
(13,22) =  0
(14,22) =  0
(15,22) =  0
( 9,23) =  0
(10,23) =  0
(11,23) =  0
Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 515
(12,23) =  0
(13,23) =  0
(14,23) =  0
(15,23) =  0
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13af0f0:
            rank = 3, typekind = 5, base_addr = 0x13af790
              PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 525
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 479
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 544
dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  8.30273e+11
(-1, 1, 3) =  10.0079
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 534
( 0, 1, 3) =  7.31618e+34
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 486
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
( 1, 1, 3) =  7.71351e+31
( 2, 1, 3) =  2.1128e-19
( 3, 1, 3) =  160.4
( 4, 1, 3) =  2.11283e-19
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
( 5, 1, 3) =  7.71352e+31
( 6, 1, 3) =  8.46648e+11
{}(-2, 2, 3) =  13.9547
  skipping to end ...
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
LocalArrayPrint: Array at address 0xd370e0:
            rank = 2, typekind = 6, base_addr = 0xd39da0
            dim[0] = 12  dim[1] = 18  ( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0

  Real, *8, Dim 2, Data values:
( 0,-1) =  6.89924e-310
( 1,-1) =  6.89924e-310
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 495
( 2,-1) =  6.85192e-317
( 3,-1) =  6.85192e-317
( 4,-1) =  1.50758e+161
( 5,-1) =  1.31837e+180
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
( 6,-1) =  1.05119e-153
( 7,-1) =  3.05994e-57
( 8,-1) =  9.88131e-324
( 9,-1) =  0
  skipping to end ...
( 2,16) =  0
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready( 3,16) =  0
( 4,16) =  0
( 5,16) =  0
( 6,16) =  0
( 7,16) =  0
( 8,16) =  0
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 370
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 544

 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
( 9,16) =  0
(10,16) =  0
(11,16) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 551
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x21d4470:
            rank = 2, typekind = 6, base_addr = 0x21d4c50
            --- ESMCI::Array::print start ---
 Base name    = dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9,13) =  6.90977e-310
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 377
MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):(10,13) =  6.90977e-310
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  2.122e-314

{}( 9,14) =  4.94066e-324
(10,14) =  9.88131e-324
(11,14) =  0
  skipping to end ...
(13,23) =  0
(14,23) =  0
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
(15,23) =  0
( 9,24) =  0
(10,24) =  0
(11,24) =  0
(12,24) =  0
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 563
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 384
LocalArrayPrint: Array at address 0x1b2f4c0:
            rank = 2, typekind = 6, base_addr = 0x1b2dca0
            dim[0] = 12  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 0,11) =  6.94476e-310
( 1,11) =  6.94476e-310
(13,24) =  0
(14,24) =  0
(15,24) =  0
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 502
( 2,11) =  1.40804e-316
( 3,11) =  1.40804e-316
( 4,11) =  0
( 5,11) =  0
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 571
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 391
( 6,11) =  2.122e-314
( 7,11) =  4.94066e-324
( 8,11) =  9.88131e-324
( 9,11) =  0
  skipping to end ...
( 2,27) =  0
( 3,27) =  0
( 4,27) =  0
( 5,27) =  0
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 581
( 6,27) =  0
( 7,27) =  0
( 8,27) =  0
( 9,27) =  0
(10,27) =  0
(11,27) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 602
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 551
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 525
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 534
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 563
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 611
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 618
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 571
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 589
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 400
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 602
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 632
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 544
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 407
--- ESMCI::Array::print start ---
 Base name    =   PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 611
MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 618
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x21d5b90:
            rank = 2, typekind = 6, base_addr = 0x21d2b70
            dim[0] = 11  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 8,11) =  6.90977e-310
( 9,11) =  6.90977e-310
(10,11) =  1.75226e-316
(11,11) =  1.75226e-316
(12,11) =  0
(13,11) =  0
(14,11) =  2.122e-314
(15,11) =  4.94066e-324
(16,11) =  9.88131e-324
(17,11) =  0
  skipping to end ...
( 9,27) =  0
(10,27) =  0
(11,27) =  0
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 632
(12,27) =  0
(13,27) =  0
(14,27) =  0
(15,27) =  0
(16,27) =  0
(17,27) =  0
(18,27) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 551
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 418
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 563
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 571
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 425
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 602
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 611
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 618
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 436
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 632
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 443
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 455
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 462
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 472
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13b22f0:
            rank = 2, typekind = 6, base_addr = 0x13b2ad0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.90634e-310
(10, 1) =  6.90634e-310
(11, 1) =  1.02048e-316
(12, 1) =  1.02048e-316
(13, 1) =  0
(14, 1) =  0
(15, 1) =  2.122e-314
( 9, 2) =  4.94066e-324
(10, 2) =  9.88131e-324
(11, 2) =  0
  skipping to end ...
(13,11) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
(10,12) =  0
(11,12) =  0
(12,12) =  0
(13,12) =  0
(14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 479
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 486
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 495
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13b22f0:
            rank = 2, typekind = 6, base_addr = 0x13b2ad0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.90634e-310
(10, 1) =  6.90634e-310
(11, 1) =  1.02048e-316
(12, 1) =  1.02048e-316
(13, 1) =  0
(14, 1) =  0
(15, 1) =  2.122e-314
( 9, 2) =  4.94066e-324
(10, 2) =  9.88131e-324
(11, 2) =  0
  skipping to end ...
(13,11) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
(10,12) =  0
(11,12) =  0
(12,12) =  0
(13,12) =  0
(14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 502
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 525
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 534
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 544
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13b2ad0:
            rank = 2, typekind = 6, base_addr = 0x13b00f0
            dim[0] = 11  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 8,-1) =  6.90634e-310
( 9,-1) =  6.90634e-310
(10,-1) =  1.01995e-316
(11,-1) =  1.01995e-316
(12,-1) =  0
(13,-1) =  0
(14,-1) =  2.122e-314
(15,-1) =  4.94066e-324
(16,-1) =  9.88131e-324
(17,-1) =  0
  skipping to end ...
( 9,16) =  1.58101e-322
(10,16) =  6.37345e-322
(11,16) =  1.01981e-316
(12,16) =  6.90634e-310
(13,16) =  1.58101e-322
(14,16) =  1.58101e-322
(15,16) =  1.02003e-316
(16,16) =  6.90625e-310
(17,16) =  1.50758e+161
(18,16) =  1.63042e-322
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 551
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 563
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 571
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 585
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 602
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 611
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 618
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 632
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 642
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 642
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 642
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 654
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 654
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 642
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 654
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 654
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 672
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 672
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 672
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 691
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 691
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 691
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 672
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 691
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 713
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 713
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 713
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 713
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 726
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 726
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 726
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 726
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 756
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 756
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 756
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 756
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 767
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 767
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 767
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 767
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 789
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 789
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 789
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 796
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 796
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 796
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 803
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 789
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 803
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 803
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = Array020
 Status: Base = Ready,  object = --- ESMCI::Array::print start ---
 Base name    = Array020
 Status: Base = Ready,  object = Ready Base name    = Array020
 Status: Base = Ready,  object = Ready
 Proxy        = no
Ready
 Proxy        = no
 Root Info (Attributes):

 Proxy        = no
 Root Info (Attributes):
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 796
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x1b37010:
            rank = 1, typekind = 6, base_addr = 0x7ffcff050d70
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x21dd440:
            rank = 1, typekind = 6, ~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xd40560:
            rank = 1, typekind = 6, base_addr = 0x7ffd65940270
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
base_addr = 0x7ffe6297e020
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 810
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 810
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 810
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 817
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 817
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 817
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 803
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 826
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 826
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 826
--- ESMCI::Array::print start ---
 Base name    = Array021--- ESMCI::Array::print start ---
 Base name    = Array020--- ESMCI::Array::print start ---
 Base name    = Array021
 Status: Base = Ready,  object = Ready
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Proxy        = no
 Root Info (Attributes):
{}--- ESMCI::Array::print start ---
 Base name    = Array021
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xd388e0:

 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x1b37010:
            rank = 1, typekind = 6, base_addr = 0x7ffcff050d70
            dim[0] = 10  
Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x21dd440:
            rank = 1, typekind = 6, base_addr = 0x7ffe6297e020
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
            rank = 1, typekind = 6, base_addr = 0x7ffd65940270
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 9] 10]
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [2 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 833
LocalArrayPrint: Array at address 0x13b8f30:
            rank = 1, typekind = 6, base_addr = 0x7ffe3203dc40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 833
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 833
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 840
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 840
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 840
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 810
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 817
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 859
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 859
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 859
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 866
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 866
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 866
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 873
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 873
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 873
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 826
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 880
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 880
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 880
--- ESMCI::Array::print start ---
 Base name    = Array021
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 899
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 899
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 899
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13b8f30:
            rank = 1, typekind = 6,   PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 906
base_addr = 0x7ffe3203dc40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 906
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 906
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 913
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 913
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 913
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 833
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 840
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 932
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 932
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 932
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 939
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 946
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 939
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 946
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 939
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 946
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 859
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 866
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 873
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1007
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 880
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1007
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1007
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1036
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1036
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1036
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 899
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1055
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1055
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1055
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 906
--- ESMCI::Array::print start ---
 Base name    = MyArray
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        =  Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):

 Proxy        = no
 Root Info (Attributes):
{}no
 Root Info (Attributes):
{}  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 913
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1062
Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xd45f00:
            rank = 1, typekind = 6, base_addr = 0xd454d0
            dim[0] = 4  
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1062
  Real, *8, Dim 1, Data values:
( 1) =  6.89924e-310
( 2) =  6.89924e-310
( 3) =  0
( 4) =  1.26481e-321
dim 1: [0]: [1 [1 [1, 4] 4] 4]
--- ESMCI::Array::print end ---  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1069
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1069

  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1062
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1069
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1085
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1085
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1092
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1092
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1085
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1092
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 932
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1120
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1120
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1127
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1127
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 939
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1120
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1137
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1127
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 946
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1007
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1036
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1055
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1062
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1069
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1085
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1092
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1120
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1127
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1137
  PET           3  Test Elapsed Time    16.848000000000003       msec.
  PET           0  Test Elapsed Time    16.902000000000001       msec.
  PET           2  Test Elapsed Time    17.154999999999998       msec.
  PET           1  Test Elapsed Time    17.750000000000004       msec.
Sun Jan 24 13:30:27 MST 2021
