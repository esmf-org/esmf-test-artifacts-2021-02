Beginning Test, file ESMC_StateUTest.C, line 53
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_StateUTest.C, line 53
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_StateUTest.C, line 53
NUMBER_OF_PROCESSORS 4
PASS StateCreate Unit test, ESMC_StateUTest.C, line 66
PASS StateCreate Unit test, ESMC_StateUTest.C, line 66
PASS ArraySpecSet, ESMC_StateUTest.C, line 75
PASS ArraySpecSet, ESMC_StateUTest.C, line 75
PASS Set up minIndex, ESMC_StateUTest.C, line 85
PASS Set up maxIndex, ESMC_StateUTest.C, line 96
PASS StateCreate Unit test, ESMC_StateUTest.C, line 66
PASS ArraySpecSet, ESMC_StateUTest.C, line 75
PASS Set up minIndex, ESMC_StateUTest.C, line 85
PASS Set up maxIndex, ESMC_StateUTest.C, line 96
Beginning Test, file ESMC_StateUTest.C, line 53
PASS Set up minIndex, ESMC_StateUTest.C, line 85
PASS Set up maxIndex, ESMC_StateUTest.C, line 96
NUMBER_OF_PROCESSORS 4
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_StateUTest.C, line 104
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_StateUTest.C, line 104
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_StateUTest.C, line 104
PASS StateCreate Unit test, ESMC_StateUTest.C, line 66
PASS ArraySpecSet, ESMC_StateUTest.C, line 75
PASS Create ESMC_Array object, ESMC_StateUTest.C, line 112
PASS Retrieve the name of an ESMC_Array object, ESMC_StateUTest.C, line 120
PASS Set up minIndex, ESMC_StateUTest.C, line 85
PASS Create ESMC_Array object, ESMC_StateUTest.C, line 112
PASS Verify array object name retrieved, ESMC_StateUTest.C, line 128
PASS Initialize data an ESMC_Array object, ESMC_StateUTest.C, line 136
PASS Create ESMC_Array object, ESMC_StateUTest.C, line 112
PASS Retrieve the name of an ESMC_Array object, ESMC_StateUTest.C, line 120
--- ESMCI::Array::print start ---
PASS Retrieve the name of an ESMC_Array object, ESMC_StateUTest.C, line 120
PASS Verify array object name retrieved, ESMC_StateUTest.C, line 128
 Base name    = array1PASS Set up maxIndex, ESMC_StateUTest.C, line 96
PASS Verify array object name retrieved, ESMC_StateUTest.C, line 128
PASS Initialize data an ESMC_Array object, ESMC_StateUTest.C, line 136

 Status: Base = ReadyPASS Initialize data an ESMC_Array object, ESMC_StateUTest.C, line 136
--- ESMCI::Array::print start ---
,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = array1 Base name    = array1

 Status: Base = Ready Status: Base = Ready,  object = Ready
,  object = Ready
 Proxy        = no Proxy        = no
 Root Info (Attributes):

 Root Info (Attributes):
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_StateUTest.C, line 104
{}deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x14f7660:
            rank = 2, typekind = 3, base_addr = 0x14f7240
            {}Array typekind/rank: Integer*4 / 2 
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -86611928
( 1, 2) =  32734
( 1, 3) =  -86611928
( 1, 4) =  32734
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x241d660:
            rank = 2, typekind = 3, LocalArrayPrint: Array at address 0x1eac660:
            rank = 2, typekind = 3, base_addr = 0x1eac240
            dim[0] = 1  dim[1] = 10  ( 1, 5) =  21971504
( 1, 6) =  0
( 1, 7) =  21983296
( 1, 8) =  0
( 1, 9) =  32
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---base_addr = 0x241d240
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -1319864280
( 1, 2) =  32753

  Integer, *4, Dim 2, Data values:
( 1, 1) =  -1308428248
( 1, 2) =  32700
( 1, 3) =  -1308428248
( 1, 4) =  32700
( 1, 5) =  32150064
( 1, 6) =  0

( 1, 3) =  -1319864280
( 1, 4) =  32753
( 1, 5) =  37855792
( 1, 6) =  0
( 1, 7) =  37867584
( 1, 8) =  0
( 1, 9) =  32
( 1,10) =  0
( 1, 7) =  32161856
( 1, 8) =  0
( 1, 9) =  32
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_StateUTest.C, line 144
PASS Print ESMC_Array object, ESMC_StateUTest.C, line 144
PASS Print ESMC_Array object, ESMC_StateUTest.C, line 144
PASS Create ESMC_Array object, ESMC_StateUTest.C, line 112
PASS Retrieve the name of an ESMC_Array object, ESMC_StateUTest.C, line 120
PASS Verify array object name retrieved, ESMC_StateUTest.C, line 128
PASS Initialize data an ESMC_Array object, ESMC_StateUTest.C, line 136
--- ESMCI::Array::print start ---
 Base name    = array1PASS Add an Array to a State object, ESMC_StateUTest.C, line 151

 Status: Base = Ready,  object = ReadyPASS Add an Array to a State object, ESMC_StateUTest.C, line 151
PASS Add an Array to a State object, ESMC_StateUTest.C, line 151

 Proxy        = no
 Root Info (Attributes):
PASS Get an array from a state, based on its name, ESMC_StateUTest.C, line 159
PASS Compare array stored into and array retrieved from a state, ESMC_StateUTest.C, line 167
PASS Get an array from a state, based on its name, ESMC_StateUTest.C, line 159
PASS Get an array from a state, based on its name, ESMC_StateUTest.C, line 159
PASS Compare array stored into and array retrieved from a state, ESMC_StateUTest.C, line 167
PASS Destroy ESMC_DistGrid object, ESMC_StateUTest.C, line 175
PASS Compare array stored into and array retrieved from a state, ESMC_StateUTest.C, line 167
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
PASS Destroy ESMC_DistGrid object, ESMC_StateUTest.C, line 175
PASS Destroy ESMC_Array object, ESMC_StateUTest.C, line 183
PASS Destroy ESMC_DistGrid object, ESMC_StateUTest.C, line 175
LocalArrayPrint: Array at address 0x17d2690:
            rank = 2, typekind = 3, base_addr = 0x17d29c0
            dim[0] = 2  dim[1] = 10  
PASS Destroy ESMC_Array object, ESMC_StateUTest.C, line 183
PASS Destroy ESMC_Array object, ESMC_StateUTest.C, line 183
  Integer, *4, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
PASS StateDestroy Unit test, ESMC_StateUTest.C, line 193
( 1, 3) =  0
( 2, 3) =  0
( 1, 4) =  0
( 2, 4) =  0
( 1, 5) =  0
( 2, 5) =  0
( 1, 6) =  0
Ending Test, file ESMC_StateUTest.C, line 200
( 2, 6) =  0
( 1, 7) =  0
( 2, 7) =  0
( 1, 8) =  0
( 2, 8) =  0
( 1, 9) =  0
( 2, 9) =  0
PASS StateDestroy Unit test, ESMC_StateUTest.C, line 193
PASS StateDestroy Unit test, ESMC_StateUTest.C, line 193
( 1,10) =  0
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
Ending Test, file ESMC_StateUTest.C, line 200
Ending Test, file ESMC_StateUTest.C, line 200
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_StateUTest.C, line 144
PASS Add an Array to a State object, ESMC_StateUTest.C, line 151
PASS Get an array from a state, based on its name, ESMC_StateUTest.C, line 159
PASS Compare array stored into and array retrieved from a state, ESMC_StateUTest.C, line 167
PASS Destroy ESMC_DistGrid object, ESMC_StateUTest.C, line 175
PASS Destroy ESMC_Array object, ESMC_StateUTest.C, line 183
PASS StateDestroy Unit test, ESMC_StateUTest.C, line 193
Ending Test, file ESMC_StateUTest.C, line 200
 PET 2 Test Elapsed Time  2.681000 msec.
 PET 3 Test Elapsed Time  2.640000 msec.
 PET 1 Test Elapsed Time  2.735000 msec.
 PET 0 Test Elapsed Time  3.511000 msec.
Sun Jan 17 16:37:52 MST 2021
