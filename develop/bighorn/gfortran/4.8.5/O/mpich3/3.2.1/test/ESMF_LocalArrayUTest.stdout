  Beginning Test, file ESMF_LocalArrayUTest.F90, line 58
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 58
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 58
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 58
  NUMBER_OF_PROCESSORS           4
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 71
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 79
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 71
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 71
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 71
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 79
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 79
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 79
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 96
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 105
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 113
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 124
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 96
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 96
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 96
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 132
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 140
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 105
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 113
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 105
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 161
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 113
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 124
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 132
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 177
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 124
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 140
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 161
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 132
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 192
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 200
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 140
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 177
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 207
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 161
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 192
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 200
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 216
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 177
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 223
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 207
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 233
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 105
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 216
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 240
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 113
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 223
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 250
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 257
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 124
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 233
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 268
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 132
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 240
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 275
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 250
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 140
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 257
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 286
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 161
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 268
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 275
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 297
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 307
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 177
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 286
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 314
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 297
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 321
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 192
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 307
LocalArrayPrint: Array at address 0x9f9f10:
            rank = 1, typekind = 3, base_addr = 0x9fa240
              PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 200
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 314
dim[0] = 10  
  Integer, *4, Dim 1, Data values:
(-5) =  -1580513352
(-4) =  32738
(-3) =  -1580513352
(-2) =  32738
(-1) =  0
( 0) =  0
( 1) =  0
( 2) =  0
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 321
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 184
( 3) =  0
( 4) =  0
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 328
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 335
LocalArrayPrint: Array at address 0x124cf00:
            rank = 1, typekind = 3, base_addr = 0x124d230
            dim[0] = 10  
  Integer, *4, Dim 1, Data values:
(-5) =  -1424853064
(-4) =  32554
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 192
(-3) =  -1424853064
(-2) =  32554
(-1) =  0
( 0) =  0
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 328
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 343
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 335
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 207
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 352
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 200
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 360
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 368
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 343
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 216
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 375
 array 1b create returned
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 223
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 207
LocalArrayPrint: Array at address 0x9f9bb0:
            rank = 1, typekind = 3, base_addr = 0x9f9080
            dim[0] = 516  
  Integer, *4, Dim 1, Data values:
( 5) =  55
( 6) =  66
( 7) =  77
( 8) =  88
( 9) =  99
(10) =  110
(11) =  121
(12) =  132
(13) =  143
(14) =  154
  skipping to end ...
(511) =  5621
(512) =  5632
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 233
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 352
(513) =  5643
(514) =  5654
(515) =  5665
(516) =  5676
(517) =  5687
(518) =  5698
(519) =  5709
(520) =  5720
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 383
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 216
 array 1b print returned
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 360
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 391
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 240
 array 1b get returned
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 223
 real lb, ub =            5         520   lib return lb, ub =            5         520
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 403
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 250
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 368
 array 1b getbounds returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 418
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 233
 array 1b get returned
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 257
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 375
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 427
 array 1b destroy returned
 array 1b create returned
LocalArrayPrint: Array at address 0x124cba0:
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 240
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 448
 array 1c create returned
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 268
            rank = 1, typekind = 3, base_addr = 0x124c070
            dim[0] = 516  
  Integer, *4, Dim 1, Data values:
( 5) =  55
( 6) =  66
( 7) =  77
( 8) =  88
LocalArrayPrint: Array at address 0x9fa0b0:
            rank = 1, typekind = 3, base_addr = 0x9f9080
            dim[0] = 835  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 275
( 9) =  99
(10) =  110
(11) =  121
(12) =  132
(13) =  143
(14) =  154
  skipping to end ...
(511) =  5621
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 250
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 257
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(826) =  826
(827) =  827
(828) =  828
(829) =  829
(830) =  830
(831) =  831
(832) =  832
(833) =  833
(834) =  834
(835) =  835
 array 1c print returned
(512) =  5632
(513) =  5643
(514) =  5654
(515) =  5665
(516) =  5676
(517) =  5687
(518) =  5698
(519) =  5709
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 459
(520) =  5720
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 383
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 472
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 286
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 268
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 479
 array 1b print returned
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 275
 array 1c destroy returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 391
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 297
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 487
 array 1b get returned
 real lb, ub =            5         520   lib return lb, ub =            5         520
 array 1c re-destroy returned
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 508
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 403
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 307
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 286
 array 1d create returned
LocalArrayPrint: Array at address 0x9f9390:
            rank = 1, typekind = 3, base_addr = 0x9fac00
            dim[0] = 1022  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
 array 1b getbounds returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 418
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(1013) =  1013
(1014) =  1014
(1015) =  1015
(1016) =  1016
(1017) =  1017
(1018) =  1018
(1019) =  1019
(1020) =  1020
(1021) =  1021
(1022) =  1022
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 314
 array 1b get returned
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 427
 array 1d print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 519
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 297
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 533
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 321
 array 1d destroy returned
 array 1b destroy returned
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 448
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 307
LocalArrayPrint: Array at address 0x1bdbf00:
            rank = 1, typekind = 3,  array 1c create returned
LocalArrayPrint: Array at address 0x124d0a0:
            rank = 1, typekind = 3, base_addr = 0x124c070
             partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 Creating array2
base_addr = 0x1bdc230
            dim[0] = 10  
  Integer, *4, Dim 1, Data values:
(-5) =  -945481800
(-4) =  32641
(-3) =  -945481800
(-2) =  32641
dim[0] = 835  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 314
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 321
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 562
(-1) =  0
( 0) =  0
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 328
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(826) =  826
(827) =  827
(828) =  828
(829) =  829
(830) =  830
(831) =  831
 array 2a create returned
LocalArrayPrint: Array at address 0x9f9390:
            rank = 2, typekind = 6, base_addr = 0x9fac00
            dim[0] = 51  dim[1] = 31  
(832) =  832
(833) =  833
(834) =  834
(835) =  835
 array 1c print returned
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
( 4, 7) =  304.1
( 5, 7) =  305.1
( 6, 7) =  306.1
( 7, 7) =  307.1
( 8, 7) =  308.1
( 9, 7) =  309.1
(10, 7) =  310.1
(11, 7) =  311.1
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 335
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 459
LocalArrayPrint: Array at address 0x15c8f00:
            rank = 1, typekind = 3, base_addr = 0x15c9230
            dim[0] = 10  
  Integer, *4, Dim 1, Data values:
(-5) =  -1700333640
(-4) =  32658
(-3) =  -1700333640
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
(45,37) =  1845.1
(46,37) =  1846.1
(47,37) =  1847.1
(48,37) =  1848.1
(49,37) =  1849.1
(50,37) =  1850.1
(51,37) =  1851.1
(52,37) =  1852.1
(53,37) =  1853.1
(-2) =  32658
(-1) =  0
( 0) =  0
( 1) =  0
( 2) =  0
( 3) =  0
 array 2a print returned
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 472
( 4) =  0
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 328
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 343
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 479
 array 2a get returned
 bounds:            3           7          53          37
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 335
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 597
 array 1c destroy returned
 array 2a destroy returned
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 352
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 622
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 487
 array 2b create returned
 array 2b get returned
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 360
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 343
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
 array 1c re-destroy returned
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 508
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 645
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 368
LocalArrayPrint: Array at address 0x9f99b0:
            rank = 2, typekind = 6, base_addr = 0x9f9080
            dim[0] = 15  dim[1] = 13  
  Real, *8, Dim 2, Data values:
 array 1d create returned
LocalArrayPrint: Array at address 0x124c380:
            rank = 1, typekind = 3, ( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 375
base_addr = 0x124dbf0
            dim[0] = 1022  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 352
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 360
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
( 6,13) =  186.1
( 7,13) =  187.1
( 8,13) =  188.1
( 9,13) =  189.1
(10,13) =  190.1
(11,13) =  191.1
(12,13) =  192.1
(13,13) =  193.1
(14,13) =  194.1
 array 1b create returned
LocalArrayPrint: Array at address 0x1bdbba0:
            rank = 1, typekind = 3, base_addr = 0x1bdb070
            dim[0] = 516  
  Integer, *4, Dim 1, Data values:
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(1013) =  1013
(1014) =  1014
(1015) =  1015
(1016) =  1016
(1017) =  1017
(1018) =  1018
(15,13) =  195.1
 array 2b print returned
 array 2b destroy returned
( 5) =  55
( 6) =  66
( 7) =  77
( 8) =  88
( 9) =  99
(10) =  110
(11) =  121
(12) =  132
(13) =  143
(1019) =  1019
(1020) =  1020
(1021) =  1021
(1022) =  1022
 array 1d print returned
(14) =  154
  skipping to end ...
(511) =  5621
(512) =  5632
(513) =  5643
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 519
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 368
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 375
(514) =  5654
(515) =  5665
(516) =  5676
(517) =  5687
(518) =  5698
(519) =  5709
(520) =  5720
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 383
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 533
 array 1b create returned
 array 1b print returned
LocalArrayPrint: Array at address 0x15c8ba0:
            rank = 1, typekind = 3, base_addr = 0x15c8070
            dim[0] = 516  
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 391
 array 1d destroy returned
  Integer, *4, Dim 1, Data values:
( 5) =  55
( 6) =  66
( 7) =  77
( 8) =  88
( 9) =  99
(10) =  110
(11) =  121
(12) =  132
(13) =  143
(14) =  154
  skipping to end ...
(511) =  5621
 array 1b get returned
(512) =  5632
(513) =  5643
(514) =  5654
(515) =  5665
(516) =  5676
(517) =  5687
 real lb, ub =            5         520   lib return lb, ub =            5         520
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 403
(518) =  5698
(519) =  5709
(520) =  5720
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 383
 array 1b getbounds returned
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 Creating array2
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 562
 array 1b print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 391
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 418
 array 2a create returned
LocalArrayPrint: Array at address 0x124c380:
            rank = 2, typekind = 6, base_addr = 0x124dbf0
            dim[0] = 51  dim[1] = 31  
 array 1b get returned
 real lb, ub =            5         520   lib return lb, ub =            5         520
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 403
 array 1b get returned
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
( 4, 7) =  304.1
( 5, 7) =  305.1
( 6, 7) =  306.1
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 427
( 7, 7) =  307.1
( 8, 7) =  308.1
( 9, 7) =  309.1
 array 1b getbounds returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 418
 array 1b destroy returned
(10, 7) =  310.1
(11, 7) =  311.1
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
(45,37) =  1845.1
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 448
(46,37) =  1846.1
(47,37) =  1847.1
(48,37) =  1848.1
 array 1b get returned
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 427
 array 1c create returned
(49,37) =  1849.1
(50,37) =  1850.1
(51,37) =  1851.1
(52,37) =  1852.1
(53,37) =  1853.1
LocalArrayPrint: Array at address 0x1bdc0a0:
            rank = 1, typekind = 3, base_addr = 0x1bdb070
            dim[0] = 835  
 array 2a print returned
 array 1b destroy returned
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 448
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
 array 1c create returned
LocalArrayPrint: Array at address 0x15c90a0:
            rank = 1, typekind = 3, base_addr = 0x15c8070
            (826) =  826
(827) =  827
(828) =  828
(829) =  829
(830) =  830
(831) =  831
(832) =  832
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
dim[0] = 835  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
(833) =  833
(834) =  834
(835) =  835
 array 1c print returned
 array 2a get returned
 bounds:            3           7          53          37
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(826) =  826
(827) =  827
(828) =  828
(829) =  829
(830) =  830
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 459
(831) =  831
(832) =  832
(833) =  833
(834) =  834
(835) =  835
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 472
 array 1c print returned
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 459
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 597
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 479
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 472
 array 1c destroy returned
 array 2a destroy returned
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 479
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 622
 array 1c destroy returned
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 487
 array 2b create returned
 array 2b get returned
 array 1c re-destroy returned
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 645
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 487
 array 1c re-destroy returned
LocalArrayPrint: Array at address 0x124c9a0:
            rank = 2, typekind = 6, base_addr = 0x124c070
            dim[0] = 15  dim[1] = 13  
  Real, *8, Dim 2, Data values:
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 508
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
 array 1d create returned
LocalArrayPrint: Array at address 0x15c8380:
            rank = 1, typekind = 3, base_addr = 0x15c9bf0
            ( 6,13) =  186.1
( 7,13) =  187.1
( 8,13) =  188.1
( 9,13) =  189.1
(10,13) =  190.1
(11,13) =  191.1
dim[0] = 1022  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
(12,13) =  192.1
(13,13) =  193.1
(14,13) =  194.1
(15,13) =  195.1
 array 2b print returned
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
 array 2b destroy returned
  skipping to end ...
(1013) =  1013
(1014) =  1014
(1015) =  1015
(1016) =  1016
(1017) =  1017
(1018) =  1018
(1019) =  1019
(1020) =  1020
(1021) =  1021
(1022) =  1022
 array 1d print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 519
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 508
 array 1d create returned
LocalArrayPrint: Array at address 0x1bdb380:
            rank = 1, typekind = 3, base_addr = 0x1bdcbf0
              PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 533
dim[0] = 1022  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(1013) =  1013
(1014) =  1014
(1015) =  1015
(1016) =  1016
(1017) =  1017
(1018) =  1018
(1019) =  1019
(1020) =  1020
(1021) =  1021
(1022) =  1022
 array 1d print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 519
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 533
 array 1d destroy returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 674
 array 2c create returned
LocalArrayPrint: Array at address 0x9f9390:
            rank = 2, typekind = 6, base_addr = 0x7fe29fc69010
            dim[0] = 4015  dim[1] = 13  
  Real, *8, Dim 2, Data values:
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 Creating array2
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
(4006,13) =  52186.1
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 562
(4007,13) =  52187.1
(4008,13) =  52188.1
(4009,13) =  52189.1
(4010,13) =  52190.1
(4011,13) =  52191.1
(4012,13) =  52192.1
(4013,13) =  52193.1
(4014,13) =  52194.1
(4015,13) =  52195.1
 array 2c print returned
 array 2a create returned
LocalArrayPrint: Array at address 0x15c8380:
            rank = 2, typekind = 6, base_addr = 0x15c9bf0
            dim[0] = 51  dim[1] = 31  
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
( 4, 7) =  304.1
( 5, 7) =  305.1
( 6, 7) =  306.1
( 7, 7) =  307.1
( 8, 7) =  308.1
( 9, 7) =  309.1
(10, 7) =  310.1
(11, 7) =  311.1
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
(45,37) =  1845.1
(46,37) =  1846.1
(47,37) =  1847.1
(48,37) =  1848.1
(49,37) =  1849.1
(50,37) =  1850.1
(51,37) =  1851.1
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
(52,37) =  1852.1
(53,37) =  1853.1
 array 2a print returned
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 696
 array 2c get returned
 array 1d destroy returned
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 714
 array 2a get returned
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 Creating array2
 array 2c destroy returned
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 562
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 742
 array 2a create returned
LocalArrayPrint: Array at address 0x1bdb380:
            rank = 2, typekind = 6, base_addr = 0x1bdcbf0
             bounds:            3           7          53          37
 array 4a create returned
dim[0] = 51  dim[1] = 31  
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
( 4, 7) =  304.1
( 5, 7) =  305.1
( 6, 7) =  306.1
( 7, 7) =  307.1
( 8, 7) =  308.1
( 9, 7) =  309.1
(10, 7) =  310.1
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 751
(11, 7) =  311.1
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
(45,37) =  1845.1
(46,37) =  1846.1
(47,37) =  1847.1
(48,37) =  1848.1
(49,37) =  1849.1
(50,37) =  1850.1
(51,37) =  1851.1
(52,37) =  1852.1
(53,37) =  1853.1
 array 2a print returned
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 761
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
 array 4a get returned
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 782
 array 2a get returned
 bounds:            3           7          53          37
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 791
 array 4a get returned
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 812
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 597
 array 4a print returned
 array 4a destroy returned
 array 2a destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 837
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 622
 array 4b create returned
LocalArrayPrint: Array at address 0x9f9390:
            rank = 3, typekind = 6, base_addr = 0x9fa520
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 674
( 1, 1, 1) =  5.16265e-317
( 2, 1, 1) =  6.94712e-310
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  2.52962e-321
 array 2b create returned
 array 2b get returned
 array 2c create returned
LocalArrayPrint: Array at address 0x124c380:
            rank = 2, typekind = 6, base_addr = 0x7f2aa9142010
            dim[0] = 4015  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 6, 1, 1) =  6.95329e-310
( 7, 1, 1) =  1.08646e-311
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
(24, 8,160) =  0
(25, 8,160) =  0
(26, 8,160) =  0
(27, 8,160) =  0
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(28, 8,160) =  0
(29, 8,160) =  0
(30, 8,160) =  0
(31, 8,160) =  0
(32, 8,160) =  0
(33, 8,160) =  0
 array 4b print returned
 array 4b destroy returned
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 645
(10, 1) =  10.1
  skipping to end ...
(4006,13) =  52186.1
(4007,13) =  52187.1
(4008,13) =  52188.1
(4009,13) =  52189.1
(4010,13) =  52190.1
(4011,13) =  52191.1
(4012,13) =  52192.1
(4013,13) =  52193.1
LocalArrayPrint: Array at address 0x1bdb9a0:
            rank = 2, typekind = 6, base_addr = 0x1bdb070
(4014,13) =  52194.1
(4015,13) =  52195.1
 array 2c print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 862
            dim[0] = 15  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
 array 4c failed create returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 888
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
 array 4d create returned
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
( 6,13) =  186.1
LocalArrayPrint: Array at address 0x9fc470:
            rank = 3, typekind = 6, base_addr = 0x9f9ee0
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 7,13) =  187.1
( 8,13) =  188.1
( 9,13) =  189.1
(10,13) =  190.1
( 1, 1, 1) =  2.26957e+15
( 2, 1, 1) =  1.39807e-152
( 3, 1, 1) =  1.69337e-152
( 4, 1, 1) =  3.52828e+20
( 5, 1, 1) =  7.23995e+78
(11,13) =  191.1
(12,13) =  192.1
(13,13) =  193.1
(14,13) =  194.1
(15,13) =  195.1
( 6, 1, 1) =  8.83512e+25
( 7, 1, 1) =  1.17125e+214
( 8, 1, 1) =  1.10639e+200
( 9, 1, 1) =  1.91085e+214
 array 2b print returned
 array 2b destroy returned
(10, 1, 1) =  7.20185e+159
  skipping to end ...
( 1, 3,40) =  771.1
( 2, 3,40) =  772.1
( 3, 3,40) =  773.1
( 4, 3,40) =  774.1
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
( 5, 3,40) =  775.1
( 6, 3,40) =  776.1
( 7, 3,40) =  777.1
( 8, 3,40) =  778.1
( 9, 3,40) =  779.1
(10, 3,40) =  780.1
 array 4d print returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 696
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 911
 array 4e create returned
LocalArrayPrint: Array at address 0x9fc830:
            rank = 3, typekind = 6, base_addr = 0x9f9ee0
            dim[0] = 11  dim[1] = 3   array 2c get returned
dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.26957e+15
( 2, 1, 1) =  1.39807e-152
( 3, 1, 1) =  1.69337e-152
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 714
( 4, 1, 1) =  3.52828e+20
( 5, 1, 1) =  7.23995e+78
( 6, 1, 1) =  8.83512e+25
( 7, 1, 1) =  1.17125e+214
( 8, 1, 1) =  1.10639e+200
( 9, 1, 1) =  1.91085e+214
(10, 1, 1) =  7.20185e+159
  skipping to end ...
( 2, 3,40) =  1.17125e+214
( 3, 3,40) =  1.10639e+200
( 4, 3,40) =  1.15314e+214
( 5, 3,40) =  1.21698e-152
( 6, 3,40) =  1.30495e+180
( 7, 3,40) =  4.64678e+30
( 8, 3,40) =  2.32358e+242
( 9, 3,40) =  8.8876e+252
(10, 3,40) =  6.72775e+199
(11, 3,40) =  3.05402e-310
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 932
 array 2c destroy returned
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 944
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 742
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 951
 array 4a create returned
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 597
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 958
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 751
 array 2a destroy returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 622
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 969
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 976
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 984
 array 2b create returned
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 994
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 761
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1004
 array 4a get returned
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 782
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1011
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 791
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1034
 array 4a get returned
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 812
 array 1f create returned
 array 1f destroy returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1045
 array 4a print returned
 array 4a destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 837
 array 2b get returned
 array 4b create returned
LocalArrayPrint: Array at address 0x124c380:
            rank = 3, typekind = 6, base_addr = 0x124d510
             partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 645
dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  9.47514e-317
( 2, 1, 1) =  6.90809e-310
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  2.52962e-321
( 6, 1, 1) =  6.95277e-310
LocalArrayPrint: Array at address 0x15c89a0:
            rank = 2, typekind = 6, base_addr = 0x15c8070
            dim[0] = 15  dim[1] = 13  
( 7, 1, 1) =  1.08646e-311
( 8, 1, 1) =  0
( 9, 1, 1) =  0
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
(10, 1, 1) =  0
  skipping to end ...
(24, 8,160) =  0
(25, 8,160) =  0
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
(26, 8,160) =  0
(27, 8,160) =  0
(28, 8,160) =  0
(29, 8,160) =  0
(30, 8,160) =  0
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
( 6,13) =  186.1
(31, 8,160) =  0
(32, 8,160) =  0
(33, 8,160) =  0
( 7,13) =  187.1
( 8,13) =  188.1
( 9,13) =  189.1
 array 4b print returned
 array 4b destroy returned
(10,13) =  190.1
(11,13) =  191.1
(12,13) =  192.1
(13,13) =  193.1
(14,13) =  194.1
(15,13) =  195.1
 array 2b print returned
 array 2b destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 862
 array 4c failed create returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 888
 array 4d create returned
LocalArrayPrint: Array at address 0x124f460:
            rank = 3, typekind = 6, base_addr = 0x124ced0
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.26957e+15
( 2, 1, 1) =  1.39807e-152
( 3, 1, 1) =  1.69337e-152
( 4, 1, 1) =  3.52828e+20
( 5, 1, 1) =  7.23995e+78
( 6, 1, 1) =  8.83512e+25
( 7, 1, 1) =  1.17125e+214
( 8, 1, 1) =  1.10639e+200
( 9, 1, 1) =  1.91085e+214
(10, 1, 1) =  7.20185e+159
  skipping to end ...
( 1, 3,40) =  771.1
( 2, 3,40) =  772.1
( 3, 3,40) =  773.1
( 4, 3,40) =  774.1
( 5, 3,40) =  775.1
( 6, 3,40) =  776.1
( 7, 3,40) =  777.1
( 8, 3,40) =  778.1
( 9, 3,40) =  779.1
(10, 3,40) =  780.1
 array 4d print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 911
 array 4e create returned
LocalArrayPrint: Array at address 0x124f820:
            rank = 3, typekind = 6, base_addr = 0x124ced0
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.26957e+15
( 2, 1, 1) =  1.39807e-152
( 3, 1, 1) =  1.69337e-152
( 4, 1, 1) =  3.52828e+20
( 5, 1, 1) =  7.23995e+78
( 6, 1, 1) =  8.83512e+25
( 7, 1, 1) =  1.17125e+214
( 8, 1, 1) =  1.10639e+200
( 9, 1, 1) =  1.91085e+214
(10, 1, 1) =  7.20185e+159
  skipping to end ...
( 2, 3,40) =  1.17125e+214
( 3, 3,40) =  1.10639e+200
( 4, 3,40) =  1.15314e+214
( 5, 3,40) =  1.21698e-152
( 6, 3,40) =  1.30495e+180
( 7, 3,40) =  4.64678e+30
( 8, 3,40) =  2.32358e+242
( 9, 3,40) =  8.8876e+252
(10, 3,40) =  6.72775e+199
(11, 3,40) =  3.05402e-310
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 932
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 944
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 951
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 958
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 674
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 969
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 976
 array 2c create returned
LocalArrayPrint: Array at address 0x1bdb380:
            rank = 2, typekind = 6,   PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 984
base_addr = 0x7f81c5a6c010
            dim[0] = 4015  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 994
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1004
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
(4006,13) =  52186.1
(4007,13) =  52187.1
(4008,13) =  52188.1
(4009,13) =  52189.1
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1011
(4010,13) =  52190.1
(4011,13) =  52191.1
(4012,13) =  52192.1
(4013,13) =  52193.1
(4014,13) =  52194.1
(4015,13) =  52195.1
 array 2c print returned
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1034
 array 1f create returned
 array 1f destroy returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1045
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 696
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 714
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 674
 array 2c create returned
LocalArrayPrint: Array at address 0x15c8380:
 array 2c destroy returned
            rank = 2, typekind = 6,   PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 742
base_addr = 0x7f9298a8a010
 array 4a create returned
            dim[0] = 4015    PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 751
dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 761
( 2, 1) =  2.1
 array 4a get returned
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 782
( 3, 1) =  3.1
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 791
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
(4006,13) =  52186.1
(4007,13) =  52187.1
(4008,13) =  52188.1
(4009,13) =  52189.1
(4010,13) =  52190.1
(4011,13) =  52191.1
(4012,13) =  52192.1
(4013,13) =  52193.1
(4014,13) =  52194.1
(4015,13) =  52195.1
 array 2c print returned
 array 4a get returned
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 812
 array 4a print returned
 array 4a destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 837
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 array 4b create returned
LocalArrayPrint: Array at address 0x1bdb380:
            rank = 3, typekind = 6, base_addr = 0x1bdc510
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  1.44271e-316
( 2, 1, 1) =  6.92657e-310
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  2.52962e-321
( 6, 1, 1) =  6.95309e-310
( 7, 1, 1) =  1.08646e-311
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
(24, 8,160) =  0
(25, 8,160) =  0
(26, 8,160) =  0
(27, 8,160) =  0
(28, 8,160) =  0
(29, 8,160) =  0
(30, 8,160) =  0
(31, 8,160) =  0
(32, 8,160) =  0
(33, 8,160) =  0
 array 4b print returned
 array 4b destroy returned
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 696
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 862
 array 2c get returned
 array 4c failed create returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 888
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 array 4d create returned
LocalArrayPrint: Array at address 0x1bde460:
            rank = 3, typekind = 6, base_addr = 0x1bdbed0
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 714
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.26957e+15
( 2, 1, 1) =  1.39807e-152
( 3, 1, 1) =  1.69337e-152
( 4, 1, 1) =  3.52828e+20
( 5, 1, 1) =  7.23995e+78
( 6, 1, 1) =  8.83512e+25
( 7, 1, 1) =  1.17125e+214
( 8, 1, 1) =  1.10639e+200
( 9, 1, 1) =  1.91085e+214
(10, 1, 1) =  7.20185e+159
  skipping to end ...
( 1, 3,40) =  771.1
( 2, 3,40) =  772.1
( 3, 3,40) =  773.1
( 4, 3,40) =  774.1
( 5, 3,40) =  775.1
( 6, 3,40) =  776.1
( 7, 3,40) =  777.1
( 8, 3,40) =  778.1
( 9, 3,40) =  779.1
(10, 3,40) =  780.1
 array 4d print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 911
 array 4e create returned
LocalArrayPrint: Array at address 0x1bde820:
 array 2c destroy returned
            rank = 3, typekind = 6, base_addr = 0x1bdbed0
            dim[0] = 11  dim[1] = 3    PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 742
dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.26957e+15
( 2, 1, 1) =  1.39807e-152
( 3, 1, 1) =  1.69337e-152
( 4, 1, 1) =  3.52828e+20
( 5, 1, 1) =  7.23995e+78
( 6, 1, 1) =  8.83512e+25
( 7, 1, 1) =  1.17125e+214
( 8, 1, 1) =  1.10639e+200
( 9, 1, 1) =  1.91085e+214
(10, 1, 1) =  7.20185e+159
  skipping to end ...
( 2, 3,40) =  1.17125e+214
( 3, 3,40) =  1.10639e+200
( 4, 3,40) =  1.15314e+214
( 5, 3,40) =  1.21698e-152
( 6, 3,40) =  1.30495e+180
( 7, 3,40) =  4.64678e+30
( 8, 3,40) =  2.32358e+242
( 9, 3,40) =  8.8876e+252
(10, 3,40) =  6.72775e+199
(11, 3,40) =  3.05402e-310
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 932
 array 4a create returned
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 944
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 951
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 751
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 958
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 969
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 761
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 976
 array 4a get returned
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 782
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 791
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 994
 array 4a get returned
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 812
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1004
 array 4a print returned
 array 4a destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 837
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1011
 array 4b create returned
LocalArrayPrint: Array at address 0x15c8380:
            rank = 3, typekind = 6, base_addr = 0x15c9510
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  1.12803e-316
( 2, 1, 1) =  6.93014e-310
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  2.52962e-321
( 6, 1, 1) =  6.9526e-310
( 7, 1, 1) =  1.08646e-311
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
(24, 8,160) =  0
(25, 8,160) =  0
(26, 8,160) =  0
(27, 8,160) =  0
(28, 8,160) =  0
(29, 8,160) =  0
(30, 8,160) =  0
(31, 8,160) =  0
(32, 8,160) =  0
(33, 8,160) =  0
 array 4b print returned
 array 4b destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 862
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1034
 array 1f create returned
 array 1f destroy returned
 array 4c failed create returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1045
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 888
 array 4d create returned
LocalArrayPrint: Array at address 0x15cb460:
            rank = 3, typekind = 6, base_addr = 0x15c8ed0
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.26957e+15
( 2, 1, 1) =  1.39807e-152
( 3, 1, 1) =  1.69337e-152
( 4, 1, 1) =  3.52828e+20
( 5, 1, 1) =  7.23995e+78
( 6, 1, 1) =  8.83512e+25
( 7, 1, 1) =  1.17125e+214
( 8, 1, 1) =  1.10639e+200
( 9, 1, 1) =  1.91085e+214
(10, 1, 1) =  7.20185e+159
  skipping to end ...
( 1, 3,40) =  771.1
( 2, 3,40) =  772.1
( 3, 3,40) =  773.1
( 4, 3,40) =  774.1
( 5, 3,40) =  775.1
( 6, 3,40) =  776.1
( 7, 3,40) =  777.1
( 8, 3,40) =  778.1
( 9, 3,40) =  779.1
(10, 3,40) =  780.1
 array 4d print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 911
 array 4e create returned
LocalArrayPrint: Array at address 0x15cb820:
            rank = 3, typekind = 6, base_addr = 0x15c8ed0
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.26957e+15
( 2, 1, 1) =  1.39807e-152
( 3, 1, 1) =  1.69337e-152
( 4, 1, 1) =  3.52828e+20
( 5, 1, 1) =  7.23995e+78
( 6, 1, 1) =  8.83512e+25
( 7, 1, 1) =  1.17125e+214
( 8, 1, 1) =  1.10639e+200
( 9, 1, 1) =  1.91085e+214
(10, 1, 1) =  7.20185e+159
  skipping to end ...
( 2, 3,40) =  1.17125e+214
( 3, 3,40) =  1.10639e+200
( 4, 3,40) =  1.15314e+214
( 5, 3,40) =  1.21698e-152
( 6, 3,40) =  1.30495e+180
( 7, 3,40) =  4.64678e+30
( 8, 3,40) =  2.32358e+242
( 9, 3,40) =  8.8876e+252
(10, 3,40) =  6.72775e+199
(11, 3,40) =  3.05402e-310
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 932
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 944
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 951
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 958
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 969
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 976
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 994
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1004
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1011
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1034
 array 1f create returned
 array 1f destroy returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1045
  PET           2  Test Elapsed Time    18.797999999999998       msec.
  PET           3  Test Elapsed Time    15.220999999999998       msec.
  PET           1  Test Elapsed Time    17.588000000000001       msec.
  PET           0  Test Elapsed Time    6.0319999999999991       msec.
Tue Feb 16 16:36:53 MST 2021
