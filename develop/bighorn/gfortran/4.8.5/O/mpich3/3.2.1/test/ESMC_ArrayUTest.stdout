Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = array1 Base name    = array1

 Status: Base = Ready,  Status: Base = Ready,  object = Ready
 Proxy        =  object = Ready
 Proxy        = no
 Root Info (Attributes):
no
 Root Info (Attributes):
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~--- ESMCI::Array::print start ---
 Base name    = array1{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
--- ESMCI::Array::print start ---
 Base name    = array1
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x781060:
            rank = 2, typekind = 3, base_addr = 0x780c60
            dim[0] = 2  dim[1] = 10  

 Status: Base = Ready,  object = ReadyLocalArrayPrint: Array at address 0x1ca9050:
            rank = 2, typekind = 3, base_addr = 0x1ca6230
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  0
( 1, 2) =  0

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):  Integer, *4, Dim 2, Data values:
( 1, 1) =  944932872
( 2, 1) =  32599
( 1, 2) =  944932872
( 2, 2) =  32599
( 1, 3) =  7867232
( 2, 3) =  0
( 1, 4) =  3
( 2, 4) =  4
( 1, 5) =  5

 Proxy        = no
 Root Info (Attributes):
( 1, 3) =  30040496
( 1, 4) =  0
( 1, 5) =  1397903187
( 1, 6) =  538981408
( 1, 7) =  538976288
( 1, 8) =  1886199866
( 1, 9) =  48
( 1,10) =  0

( 2, 5) =  6
( 1, 6) =  7
( 2, 6) =  8
( 1, 7) =  9
( 2, 7) =  10
( 1, 8) =  33
( 2, 8) =  0
( 1, 9) =  944932792
( 2, 9) =  32599
( 1,10) =  7854272
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
{}{}PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1aa0050:
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
            rank = 2, typekind = 3, base_addr = 0x1a9d230
            dim[0] = 1  dim[1] = 10  
LocalArrayPrint: Array at address 0x1300050:
            rank = 2, typekind = 3, base_addr = 0x12fd230
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
  Integer, *4, Dim 2, Data values:
( 1, 1) =  0
( 1, 2) =  0
( 1, 3) =  27906480
( 1, 4) =  0
( 1, 5) =  1397903187
( 1, 6) =  538981408
( 1, 1) =  0
( 1, 2) =  0
( 1, 3) =  19911088
( 1, 4) =  0
( 1, 5) =  1397903187
( 1, 6) =  538981408
( 1, 7) =  538976288
( 1, 8) =  1886199866
( 1, 9) =  48
( 1, 7) =  538976288
( 1, 8) =  1886199866
( 1, 9) =  48
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 0 Test Elapsed Time  1.666000 msec.
 PET 3 Test Elapsed Time  1.570000 msec.
 PET 2 Test Elapsed Time  1.968000 msec.
 PET 1 Test Elapsed Time  1.905000 msec.
Thu Feb 11 02:34:49 MST 2021
