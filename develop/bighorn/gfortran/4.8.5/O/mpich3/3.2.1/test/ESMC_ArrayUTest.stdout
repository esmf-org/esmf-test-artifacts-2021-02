Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = array1 Base name    = array1
 Status: Base = Ready, 
 Status: Base = Ready,  object = PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
 object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = array1Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = array1
 Status: Base = 
 Status: Base = Ready, Ready,  object = Ready
 Proxy        =  object = Ready
 Proxy        = no
 Root Info (Attributes):
no
 Root Info (Attributes):
{}{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1e01060:
            rank = 2, typekind = 3, LocalArrayPrint: Array at address 0xd62020:
            rank = 2, typekind = 3, base_addr = 0xd5ea00
            base_addr = 0x1e00c60
            dim[0] = 2  dim[1] = 10  
{}dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  994330584
( 1, 2) =  32700
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~  Integer, *4, Dim 2, Data values:
( 1, 1) =  -900855800
( 2, 1) =  32522
( 1, 2) =  -900855800
( 2, 2) =  32522
( 1, 3) =  31460192
( 2, 3) =  0
( 1, 4) =  3
( 2, 4) =  4
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
( 1, 3) =  994330584
( 1, 4) =  32700
( 1, 5) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 9) =  48
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]

DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xac0020:
            rank = 2, typekind = 3, base_addr = 0xabca00
            ( 1, 5) =  5
( 2, 5) =  6
( 1, 6) =  7
( 2, 6) =  8
( 1, 7) =  9
( 2, 7) =  10
( 1, 8) =  33
( 2, 8) =  0
( 1, 9) =  -900855880
( 2, 9) =  32522
LocalArrayPrint: Array at address 0xf3e020:
            rank = 2, typekind = 3, base_addr = 0xf3aa00
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -328357928
--- ESMCI::Array::print end ---
dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  1485510616
( 1, 2) =  32542
( 1, 3) =  1485510616
( 1, 4) =  32542
( 1, 5) =  0
( 1,10) =  31447392
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 1, 2) =  32546
( 1, 3) =  -328357928
( 1, 4) =  32546
( 1, 5) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 9) =  48
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 9) =  48
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 1 Test Elapsed Time  1.585000 msec.
 PET 3 Test Elapsed Time  1.687000 msec.
 PET 2 Test Elapsed Time  1.939000 msec.
 PET 0 Test Elapsed Time  2.150000 msec.
Thu Nov 12 04:54:03 MST 2020
