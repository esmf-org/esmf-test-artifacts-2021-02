Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
Beginning Test, file ESMC_ArrayUTest.C, line 46
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
 Base name    = --- ESMCI::Array::print start ---
 Base name    = array1array1

 Status: Base = Ready Status: Base = Ready,  object = Ready,  object = Ready
 Proxy        = 
 Proxy        = no
 Root Info (Attributes):
no
 Root Info (Attributes):
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = array1 Base name    = array1

 Status: Base = Ready{} Status: Base = Ready,  object = Ready
 Proxy        = no{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
,  object = Ready
 Proxy        = no
 Root Info (Attributes):
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~

 Root Info (Attributes):
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x2169020:
            rank = 2, typekind = 3, base_addr = 0x2165a00
            dim[0] = 1  dim[1] = 10  LocalArrayPrint: Array at address 0x1398060:
            rank = 2, typekind = 3, base_addr = 0x1397c60
            dim[0] = 2  dim[1] = 10  

  Integer, *4, Dim 2, Data values:
( 1, 1) =  -1084246056
( 1, 2) =  32722
  Integer, *4, Dim 2, Data values:
( 1, 1) =  1311762440
( 2, 1) =  32542
( 1, 2) =  1311762440
( 2, 2) =  32542
( 1, 3) =  -1084246056
( 1, 4) =  32722
( 1, 5) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 3) =  20544352
( 2, 3) =  0
( 1, 4) =  3
( 2, 4) =  4
( 1, 5) =  5
( 2, 5) =  6
( 1, 9) =  48
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
( 1, 6) =  7
( 2, 6) =  8
( 1, 7) =  9
( 2, 7) =  10
( 1, 8) =  33
{}dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
( 2, 8) =  0
( 1, 9) =  1311762360
( 2, 9) =  32542
( 1,10) =  20531552
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x21ae020:
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x918020:
            rank = 2, typekind = 3, base_addr = 0x914a00
            PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
            rank = 2, typekind = 3, base_addr = 0x21aaa00
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  1856571352
( 1, 2) =  32701
( 1, 3) =  1856571352
( 1, 4) =  32701
( 1, 1) =  -895088680
( 1, 2) =  32532
( 1, 3) =  -895088680
( 1, 4) =  32532
( 1, 5) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 5) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 9) =  48
( 1,10) =  0
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
( 1, 8) =  0
( 1, 9) =  48
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 0 Test Elapsed Time  1.700000 msec.
 PET 2 Test Elapsed Time  1.896000 msec.
 PET 1 Test Elapsed Time  1.827000 msec.
 PET 3 Test Elapsed Time  1.932000 msec.
Sun Jan 24 13:30:27 MST 2021
