Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
Beginning Test, file ESMC_ArrayUTest.C, line 46
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
Beginning Test, file ESMC_ArrayUTest.C, line 46
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
NUMBER_OF_PROCESSORS 4
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
NUMBER_OF_PROCESSORS 4
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
 Base name    = array1--- ESMCI::Array::print start ---
 Base name    = array1
 Status: Base = 
 Status: Base = Ready,  object = Ready,  object = Ready
 Proxy        = Ready
 Proxy        = no
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = array1 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = array1
 Status: Base = Ready,  object = 
 Status: Base = Ready,  object = Ready
 Proxy        = no
Ready
 Proxy        = no
 Root Info (Attributes):
 Root Info (Attributes):
{}{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~

DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xb40060:
            rank = 2, typekind = 3, LocalArrayPrint: Array at address 0xc5b020:
            rank = 2, typekind = 3, base_addr = 0xc57a00
            dim[0] = 1  base_addr = 0xb3fc60
            dim[0] = 2  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
{}dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  1719969752
( 1, 2) =  32727
( 1, 3) =  1719969752
( 1, 4) =  32727
( 1, 5) =  0
( 1, 6) =  0
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
( 1, 1) =  2113857544
( 2, 1) =  32735
( 1, 2) =  2113857544
( 2, 2) =  32735
( 1, 3) =  11795296
( 2, 3) =  0
( 1, 4) =  3
( 2, 4) =  4
( 1, 5) =  5
( 2, 5) =  6
( 1, 6) =  7
( 2, 6) =  8
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x879020:
            rank = 2, typekind = 3, base_addr = 0x875a00
( 1, 7) =  0
( 1, 8) =  0
( 1, 9) =  48
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x255b020:
            rank = 2, typekind = 3, base_addr = 0x2557a00
            dim[0] = 1  dim[1] = 10  
( 1, 7) =  9
( 2, 7) =  10
( 1, 8) =  33
( 2, 8) =  0
( 1, 9) =  2113857464
( 2, 9) =  32735
( 1,10) =  11782496
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -1070491688
( 1, 2) =  32636
( 1, 3) =  -1070491688
( 1, 4) =  32636
( 1, 5) =  0
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -92514344
( 1, 2) =  32576
( 1, 3) =  -92514344
( 1, 4) =  32576
( 1, 5) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 9) =  48
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
( 1, 9) =  48
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 1 Test Elapsed Time  1.731000 msec.
 PET 3 Test Elapsed Time  1.875000 msec.
 PET 0 Test Elapsed Time  2.000000 msec.
 PET 2 Test Elapsed Time  2.001000 msec.
Sun Dec 20 05:05:27 MST 2020
