Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
Beginning Test, file ESMC_ArrayUTest.C, line 46
NUMBER_OF_PROCESSORS 4
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS ArraySpecSet, ESMC_ArrayUTest.C, line 55
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up minIndex, ESMC_ArrayUTest.C, line 65
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Set up maxIndex, ESMC_ArrayUTest.C, line 76
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_ArrayUTest.C, line 84
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
PASS Create ESMC_Array object, ESMC_ArrayUTest.C, line 96
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = array1 Base name    = array1 Base name    = array1 Base name    = array1

 Status: Base = Ready, 
 Status: Base = Ready,  object =  Status: Base = Ready,  object = Ready
 Proxy        = 
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 object = Ready
 Proxy        = no
 Root Info (Attributes):
Ready
 Proxy        = no
 Root Info (Attributes):
no
 Root Info (Attributes):
{}{}{}{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1170040:
            rank = 2, typekind = 3, ~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x25c3000:
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xdff000:
            rank = 2, typekind = 3, base_addr = 0xdfb9e0
            dim[0] = 1  ~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x2428000:
            rank = 2, typekind = 3, base_addr = 0x24249e0
            dim[0] = 1  dim[1] = 10  
base_addr = 0x116fc40
            dim[0] = 2  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -2052782072
( 2, 1) =  32761
            rank = 2, typekind = 3, base_addr = 0x25bf9e0
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  2093746136
( 1, 2) =  32656
dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -1372112936
( 1, 2) =  32705
( 1, 3) =  -1372112936
( 1, 4) =  32705
( 1, 5) =  0
  Integer, *4, Dim 2, Data values:
( 1, 1) =  -669812776
( 1, 2) =  32712
( 1, 3) =  -669812776
( 1, 4) =  32712
( 1, 5) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 2) =  -2052782072
( 2, 2) =  32761
( 1, 3) =  18283328
( 2, 3) =  0
( 1, 4) =  3
( 2, 4) =  4
( 1, 5) =  5
( 2, 5) =  6
( 1, 6) =  7
( 1, 3) =  2093746136
( 1, 4) =  32656
( 1, 5) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 9) =  48
( 1,10) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 9) =  48
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 1, 8) =  0
( 1, 9) =  48
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 2, 6) =  8
( 1, 7) =  9
( 2, 7) =  10
( 1, 8) =  33
( 2, 8) =  0
( 1, 9) =  -2052782152
( 2, 9) =  32761
( 1,10) =  18270528
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
( 2,10) =  0
dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Print ESMC_Array object, ESMC_ArrayUTest.C, line 104
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_DistGrid object, ESMC_ArrayUTest.C, line 112
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
PASS Destroy ESMC_Array object, ESMC_ArrayUTest.C, line 120
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
Ending Test, file ESMC_ArrayUTest.C, line 124
 PET 3 Test Elapsed Time  1.502000 msec.
 PET 2 Test Elapsed Time  1.629000 msec.
 PET 1 Test Elapsed Time  1.690000 msec.
 PET 0 Test Elapsed Time  1.831000 msec.
