Beginning Test, file ESMC_StateUTest.C, line 53
NUMBER_OF_PROCESSORS 4
PASS StateCreate Unit test, ESMC_StateUTest.C, line 66
PASS ArraySpecSet, ESMC_StateUTest.C, line 75
PASS Set up minIndex, ESMC_StateUTest.C, line 85
PASS Set up maxIndex, ESMC_StateUTest.C, line 96
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_StateUTest.C, line 104
Beginning Test, file ESMC_StateUTest.C, line 53
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_StateUTest.C, line 53
NUMBER_OF_PROCESSORS 4
Beginning Test, file ESMC_StateUTest.C, line 53
NUMBER_OF_PROCESSORS 4
PASS Create ESMC_Array object, ESMC_StateUTest.C, line 112
PASS Retrieve the name of an ESMC_Array object, ESMC_StateUTest.C, line 120
PASS StateCreate Unit test, ESMC_StateUTest.C, line 66
PASS Verify array object name retrieved, ESMC_StateUTest.C, line 128
PASS ArraySpecSet, ESMC_StateUTest.C, line 75
PASS Initialize data an ESMC_Array object, ESMC_StateUTest.C, line 136
--- ESMCI::Array::print start ---
PASS Set up minIndex, ESMC_StateUTest.C, line 85
PASS Set up maxIndex, ESMC_StateUTest.C, line 96
 Base name    = array1
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
PASS StateCreate Unit test, ESMC_StateUTest.C, line 66
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_StateUTest.C, line 104
PASS ArraySpecSet, ESMC_StateUTest.C, line 75
PASS Set up minIndex, ESMC_StateUTest.C, line 85
PASS Set up maxIndex, ESMC_StateUTest.C, line 96
PASS StateCreate Unit test, ESMC_StateUTest.C, line 66
{}PASS ArraySpecSet, ESMC_StateUTest.C, line 75
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
PASS Set up minIndex, ESMC_StateUTest.C, line 85
LocalArrayPrint: Array at address 0x1b59880:
            rank = 2, typekind = 3, base_addr = 0x1b591b0
            dim[0] = 1  dim[1] = 10  
PASS Set up maxIndex, ESMC_StateUTest.C, line 96
  Integer, *4, Dim 2, Data values:
( 1, 1) =  28676432
( 1, 2) =  0
( 1, 3) =  0
( 1, 4) =  0
( 1, 5) =  0
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_StateUTest.C, line 104
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 9) =  0
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_StateUTest.C, line 144
PASS Create 5 x 10 ESMC_DistGrid object, ESMC_StateUTest.C, line 104
PASS Create ESMC_Array object, ESMC_StateUTest.C, line 112
PASS Retrieve the name of an ESMC_Array object, ESMC_StateUTest.C, line 120
PASS Verify array object name retrieved, ESMC_StateUTest.C, line 128
PASS Initialize data an ESMC_Array object, ESMC_StateUTest.C, line 136
--- ESMCI::Array::print start ---
 Base name    = array1PASS Add an Array to a State object, ESMC_StateUTest.C, line 151

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
PASS Create ESMC_Array object, ESMC_StateUTest.C, line 112
PASS Get an array from a state, based on its name, ESMC_StateUTest.C, line 159
PASS Retrieve the name of an ESMC_Array object, ESMC_StateUTest.C, line 120
PASS Compare array stored into and array retrieved from a state, ESMC_StateUTest.C, line 167
PASS Verify array object name retrieved, ESMC_StateUTest.C, line 128
PASS Initialize data an ESMC_Array object, ESMC_StateUTest.C, line 136
PASS Destroy ESMC_DistGrid object, ESMC_StateUTest.C, line 175
--- ESMCI::Array::print start ---
 Base name    = array1PASS Create ESMC_Array object, ESMC_StateUTest.C, line 112
{}
 Status: Base = Ready,  object = PASS Destroy ESMC_Array object, ESMC_StateUTest.C, line 183
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
Ready
 Proxy        = no
 Root Info (Attributes):
PASS Retrieve the name of an ESMC_Array object, ESMC_StateUTest.C, line 120
LocalArrayPrint: Array at address 0x190c890:
            rank = 2, typekind = 3, base_addr = 0x190cbc0
            dim[0] = 2  dim[1] = 10  
PASS Verify array object name retrieved, ESMC_StateUTest.C, line 128
  Integer, *4, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
( 1, 3) =  0
( 2, 3) =  0
PASS Initialize data an ESMC_Array object, ESMC_StateUTest.C, line 136
( 1, 4) =  0
( 2, 4) =  0
( 1, 5) =  0
( 2, 5) =  0
( 1, 6) =  0
( 2, 6) =  0
( 1, 7) =  0
--- ESMCI::Array::print start ---
( 2, 7) =  0
( 1, 8) =  0
( 2, 8) =  0
( 1, 9) =  0
( 2, 9) =  0
( 1,10) =  0
( 2,10) =  0
 Base name    = array1dim 1: [0]: [1 [1 [1, 2] 2] 2]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
PASS Print ESMC_Array object, ESMC_StateUTest.C, line 144
PASS StateDestroy Unit test, ESMC_StateUTest.C, line 193
Ending Test, file ESMC_StateUTest.C, line 200
{}Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1cd4880:
            rank = 2, typekind = 3, base_addr = 0x1cd41b0
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  30228816
( 1, 2) =  0
( 1, 3) =  0
( 1, 4) =  0
( 1, 5) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 9) =  0
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
{}PASS Print ESMC_Array object, ESMC_StateUTest.C, line 144
Array typekind/rank: Integer*4 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xf8e880:
            rank = 2, typekind = 3, base_addr = 0xf8e1b0
            dim[0] = 1  dim[1] = 10  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  16310608
( 1, 2) =  0
( 1, 3) =  0
( 1, 4) =  0
( 1, 5) =  0
( 1, 6) =  0
( 1, 7) =  0
( 1, 8) =  0
( 1, 9) =  0
( 1,10) =  0
dim 1: [0]: [1 [1 [1, 1] 1] 1]
dim 2: [1]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
PASS Print ESMC_Array object, ESMC_StateUTest.C, line 144
PASS Add an Array to a State object, ESMC_StateUTest.C, line 151
PASS Get an array from a state, based on its name, ESMC_StateUTest.C, line 159
PASS Compare array stored into and array retrieved from a state, ESMC_StateUTest.C, line 167
PASS Destroy ESMC_DistGrid object, ESMC_StateUTest.C, line 175
PASS Add an Array to a State object, ESMC_StateUTest.C, line 151
PASS Destroy ESMC_Array object, ESMC_StateUTest.C, line 183
PASS Get an array from a state, based on its name, ESMC_StateUTest.C, line 159
PASS Compare array stored into and array retrieved from a state, ESMC_StateUTest.C, line 167
PASS StateDestroy Unit test, ESMC_StateUTest.C, line 193
PASS Add an Array to a State object, ESMC_StateUTest.C, line 151
PASS Destroy ESMC_DistGrid object, ESMC_StateUTest.C, line 175
Ending Test, file ESMC_StateUTest.C, line 200
PASS Destroy ESMC_Array object, ESMC_StateUTest.C, line 183
PASS Get an array from a state, based on its name, ESMC_StateUTest.C, line 159
PASS Compare array stored into and array retrieved from a state, ESMC_StateUTest.C, line 167
PASS Destroy ESMC_DistGrid object, ESMC_StateUTest.C, line 175
PASS StateDestroy Unit test, ESMC_StateUTest.C, line 193
Ending Test, file ESMC_StateUTest.C, line 200
PASS Destroy ESMC_Array object, ESMC_StateUTest.C, line 183
PASS StateDestroy Unit test, ESMC_StateUTest.C, line 193
Ending Test, file ESMC_StateUTest.C, line 200
 PET 3 Test Elapsed Time  2.879000 msec.
 PET 1 Test Elapsed Time  2.229000 msec.
 PET 0 Test Elapsed Time  2.365000 msec.
 PET 2 Test Elapsed Time  2.182000 msec.
