  Beginning Test, file ESMF_VMOpenMPUTest.F90, line 57
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_VMOpenMPUTest.F90, line 57
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_VMOpenMPUTest.F90, line 57
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_VMOpenMPUTest.F90, line 57
  NUMBER_OF_PROCESSORS           4
 tid =            0
  PASS  Check that OpenMP functions correctly if it is available, ESMF_VMOpenMPUTest.F90, line 84
 tid =            0
 tid =            0
  PASS  Check that OpenMP functions correctly if it is available, ESMF_VMOpenMPUTest.F90, line 84
 ESMF was compiled with OpenMP
  PASS  Determine whether ESMF library was compiled with OpenMP, ESMF_VMOpenMPUTest.F90, line 97
  Ending Test, file ESMF_VMOpenMPUTest.F90, line 101
 tid =            0
  PASS  Check that OpenMP functions correctly if it is available, ESMF_VMOpenMPUTest.F90, line 84
 ESMF was compiled with OpenMP
  PASS  Determine whether ESMF library was compiled with OpenMP, ESMF_VMOpenMPUTest.F90, line 97
  Ending Test, file ESMF_VMOpenMPUTest.F90, line 101
 ESMF was compiled with OpenMP
  PASS  Determine whether ESMF library was compiled with OpenMP, ESMF_VMOpenMPUTest.F90, line 97
  Ending Test, file ESMF_VMOpenMPUTest.F90, line 101
  PASS  Check that OpenMP functions correctly if it is available, ESMF_VMOpenMPUTest.F90, line 84
 ESMF was compiled with OpenMP
  PASS  Determine whether ESMF library was compiled with OpenMP, ESMF_VMOpenMPUTest.F90, line 97
  Ending Test, file ESMF_VMOpenMPUTest.F90, line 101
  PET           2  Test Elapsed Time    2.6499999999999995       msec.
  PET           0  Test Elapsed Time    2.6380000000000017       msec.
  PET           1  Test Elapsed Time    2.8089999999999922       msec.
  PET           3  Test Elapsed Time    2.8620000000000037       msec.
--------------------------------------------------------------------------
mpirun has exited due to process rank 0 with PID 0 on
node r2i4n9 exiting improperly. There are three reasons this could occur:

1. this process did not call "init" before exiting, but others in
the job did. This can cause a job to hang indefinitely while it waits
for all processes to call "init". By rule, if one process calls "init",
then ALL processes must call "init" prior to termination.

2. this process called "init", but exited without calling "finalize".
By rule, all processes that call "init" MUST call "finalize" prior to
exiting or it will be considered an "abnormal termination"

3. this process called "MPI_Abort" or "orte_abort" and the mca parameter
orte_create_session_dirs is set to false. In this case, the run-time cannot
detect that the abort call was an abnormal termination. Hence, the only
error message you will receive is this one.

This may have caused other processes in the application to be
terminated by signals sent by mpirun (as reported here).

You can avoid this message by specifying -quiet on the mpirun command line.
--------------------------------------------------------------------------
Sun Nov 22 05:43:20 MST 2020
