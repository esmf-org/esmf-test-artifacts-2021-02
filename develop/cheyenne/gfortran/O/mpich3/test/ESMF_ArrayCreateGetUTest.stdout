  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 96
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 96
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 96
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 96
  NUMBER_OF_PROCESSORS           4
  NUMBER_OF_PROCESSORS           4
  NUMBER_OF_PROCESSORS           4
  NUMBER_OF_PROCESSORS           4
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 117
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 117
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 117
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 117
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 124
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 124
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 124
  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 124
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 142
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 142
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 142
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 142
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 149
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 149
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 149
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 149
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 156
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 156
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 156
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 156
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 163
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 163
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 163
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 163
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 170
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 170
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 170
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 170
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 177
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 177
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 177
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 177
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 185
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 185
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 185
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 185
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 192
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 192
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 192
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90, line 192
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 201
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 201
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 201
  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetUTest.F90, line 201
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 208
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 208
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 208
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 216
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 208
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 216
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 216
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 224
  PASS  Array equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 216
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 224
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 224
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 231
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 224
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 231
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 231
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 231
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 240
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 248
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 255
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 262
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 276
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 284
--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x19dccf0:
            rank = 2, typekind = 6, base_addr = 0x19dd020
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  0
( 2,13) =  0
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,22) =  0
( 8,22) =  0
( 1,23) =  0
( 2,23) =  0
( 3,23) =  0
( 4,23) =  0
( 5,23) =  0
( 6,23) =  0
( 7,23) =  0
( 8,23) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 291
 Array name: MyArray with ArraySpec                                                          
  PASS  ArrayGet name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 299
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 313
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  ArrayCreate from Copy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 333
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 340
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x19ddc50:
            rank = 2, typekind = 6, base_addr = 0x19ddf80
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  0
( 2,13) =  0
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,22) =  0
( 8,22) =  0
( 1,23) =  0
( 2,23) =  0
( 3,23) =  0
( 4,23) =  0
( 5,23) =  0
( 6,23) =  0
( 7,23) =  0
( 8,23) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 354
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 240
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 240
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 248
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 248
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 255
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 262
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 255
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 262
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 363
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 276
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x19dcca0:
            rank = 3, typekind = 5, base_addr = 0x19de350
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 276
(-2, 1, 3) =  5.79662e-38
(-1, 1, 3) =  0
( 0, 1, 3) =  -6.07688e-24
( 1, 1, 3) =  1.56133e-41
( 2, 1, 3) =  4.48416e-44
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 284
( 3, 1, 3) =  0
( 4, 1, 3) =  4.48416e-44
( 5, 1, 3) =  0
( 6, 1, 3) =  5.79991e-38
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
--- ESMCI::Array::print start ---
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 284
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
 Base name    = MyArray with ArraySpec
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 370
 Status: Base = Ready,  object = Ready
 Proxy        = --- ESMCI::Array::print start ---
 Base name    = no
 Root Info (Attributes):
MyArray with ArraySpec
 Status: Base = Ready,   PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 377
 object = Ready
 Proxy        = no
 Root Info (Attributes):
{}  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 384
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xcc1c90:
            rank = 2, typekind = 6, base_addr = 0xcc1fc0
            dim[0] = 7  {}  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 391
dim[1] = 11  
  Real, *8, Dim 2, Data values:
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13b0cd0:
            rank = 2, typekind = 6, base_addr = 0x13b1000
            dim[0] = 7  dim[1] = 12  ( 9,13) =  0
(10,13) =  0
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0

  Real, *8, Dim 2, Data values:
( 9,14) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,22) =  0
(14,22) =  0
(15,22) =  0
( 9,23) =  0
(10,23) =  0
(11,23) =  0
(12,23) =  0
( 9, 1) =  0
(10, 1) =  0
(11, 1) =  0
(12, 1) =  0
(13,23) =  0
(14,23) =  0
(15,23) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
(13, 1) =  0
(14, 1) =  0
(15, 1) =  0
( 9, 2) =  0
(10, 2) =  0
(11, 2) =  0
  skipping to end ...
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 291
(13,11) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
(10,12) =  0
(11,12) =  0
(12,12) =  0
(13,12) =  0
(14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 291
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 400
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 407
 Array name: MyArray with ArraySpec                                                          
  PASS  ArrayGet name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 299
 Array name: MyArray with ArraySpec                                                          
  PASS  ArrayGet name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 299
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 240
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 418
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 248
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 425
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 255
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 262
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 436
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 443
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 313
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 276
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 313
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 284
--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  ArrayCreate from Copy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 333

 Status: Base = Ready,  object = Ready
 Proxy        =   PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 340
no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,   PASS  ArrayCreate from Copy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 333
 object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
{}  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 340
LocalArrayPrint: Array at address 0xcc2b90:
            rank = 2, typekind = 6, base_addr = 0xcc2ec0
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x23b0d60:
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = ( 9,13) =  0
(10,13) =  0
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
            rank = 2, typekind = 6, base_addr = 0x23b1090
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
Ready
 Proxy        = no
 Root Info (Attributes):
{}(11,14) =  0
  skipping to end ...
(13,22) =  0
(14,22) =  0
(15,22) =  0
( 9,23) =  0
(10,23) =  0
(11,23) =  0
(12,23) =  0
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13b1c10:
(13,23) =  0
(14,23) =  0
(15,23) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
            rank = 2, typekind = 6, base_addr = 0x13b1f40
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  0
(10, 1) =  0
  PASS  ArrayPrint from Copy after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
(11, 1) =  0
(12, 1) =  0
(13, 1) =  0
(14, 1) =  0
(15, 1) =  0
( 9, 2) =  0
(10, 2) =  0
(11, 2) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
  skipping to end ...
(13,11) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
(10,12) =  0
(11,12) =  0
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 354
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 291
(12,12) =  0
(13,12) =  0
(14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 354
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 455
 Array name: MyArray with ArraySpec                                                          
  PASS  ArrayGet name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 299
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 462
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 472
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x19e1620:
            rank = 2, typekind = 6, base_addr = 0x19e1950
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  2.36445e-310
( 2,13) =  2.36445e-310
( 3,13) =  3.56495e-312
( 4,13) =  3.60739e-312
( 5,13) =  3.64983e-312
( 6,13) =  3.69227e-312
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 363
( 7,13) =  3.73471e-312
( 8,13) =  3.77715e-312
( 1,14) =  3.81959e-312
( 2,14) =  3.86203e-312
  skipping to end ...
( 7,22) =  0
( 8,22) =  1.26481e-321
( 1,23) =  1.26481e-321
( 2,23) =  6.95285e-310
( 3,23) =  5.43231e-312
( 4,23) =  0
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,   PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 363
( 5,23) =  0
( 6,23) =  0
( 7,23) =  1.76283e-320
( 8,23) =  4.74303e-322
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
 object = Ready
 Proxy        = no
 Root Info (Attributes):
{}  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 479
Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xcc1c50:
            rank = 3, typekind = 5, --- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Readybase_addr = 0xcc3230
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 486
(-2, 1, 3) =  1.87446e-38
(-1, 1, 3) =  0
( 0, 1, 3) =  -2.44112e+33
( 1, 1, 3) =  1.55054e-41
( 2, 1, 3) =  4.48416e-44
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
( 3, 1, 3) =  0
( 4, 1, 3) =  4.48416e-44
( 5, 1, 3) =  0
( 6, 1, 3) =  1.87525e-38
(-2, 2, 3) =  0
  skipping to end ...
LocalArrayPrint: Array at address 0x13b0c90:
            rank = 3, typekind = 5, base_addr = 0x13b22f0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
(-2, 1, 3) =  3.43554e-38
(-1, 1, 3) =  0
( 0, 1, 3) =  4.73907
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
( 1, 1, 3) =  1.5347e-41
( 2, 1, 3) =  4.48416e-44
( 3, 1, 3) =  0
( 4, 1, 3) =  4.48416e-44
( 5, 1, 3) =  0
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 370
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 313
( 6, 1, 3) =  3.43717e-38
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 495
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 370
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 377

 Proxy        = no
 Root Info (Attributes):
{}  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 384
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x19e0020:
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 377
            rank = 2, typekind = 6, base_addr = 0x19e1620
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 391
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetUTest.F90, line 326
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 384
( 1,13) =  2.36445e-310
( 2,13) =  2.36445e-310
( 3,13) =  1.34077e-316
( 4,13) =  1.34077e-316
( 5,13) =  0
( 6,13) =  2.122e-314
( 7,13) =  2.122e-314
( 8,13) =  2.122e-314
( 1,14) =  2.122e-314
( 2,14) =  4.88059e-313
  skipping to end ...
( 7,23) =  9.33678e-313
( 8,23) =  9.76118e-313
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 391
( 1,24) =  1.01856e-312
( 2,24) =  1.061e-312
( 3,24) =  1.10344e-312
( 4,24) =  1.14588e-312
( 5,24) =  1.18832e-312
  PASS  ArrayCreate from Copy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 333
( 6,24) =  1.23076e-312
( 7,24) =  1.50662e-312
( 8,24) =  2.0159e-312
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 502
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 340
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 515
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x23b1d00:
            rank = 2, typekind = 6, base_addr = 0x23b2030
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 525
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 400
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 400
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 534
  PASS  ArrayPrint from Copy after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 407
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 407
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 354
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 418
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 544
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 425
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 418
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x19e0020:
            rank = 2, typekind = 6, base_addr = 0x19e1600
            dim[0] = 12  dim[1] = 17    PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 425
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 363

  Real, *8, Dim 2, Data values:
( 0,11) =  2.36445e-310
( 1,11) =  2.36445e-310
( 2,11) =  1.34077e-316
( 3,11) =  1.34077e-316
( 4,11) =  1.34078e-316
( 5,11) =  8.88749e+252
--- ESMCI::Array::print start ---
 Base name    = MyArray( 6,11) =  8.8876e+252
( 7,11) =  8.19845e+06
( 8,11) =  1.50758e+161

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
( 9,11) =  1.31837e+180
  skipping to end ...
( 2,27) =  3.71537e-321
( 3,27) =  1.3488e-321
( 4,27) =  2.36445e-310
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
( 5,27) =  2.36445e-310
( 6,27) =  3.87347e-321
( 7,27) =  1.58101e-322
( 8,27) =  1.34086e-316
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x23b1d00:
            rank = 3, typekind = 5, base_addr = 0x23b2420
            ( 9,27) =  2.36445e-310
(10,27) =  4.03158e-321
(11,27) =  1.58101e-322
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  1.37422e-37
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 436
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 551
(-1, 1, 3) =  0
( 0, 1, 3) =  2.95177e-10
( 1, 1, 3) =  1.53989e-41
( 2, 1, 3) =  4.48416e-44
( 3, 1, 3) =  0
( 4, 1, 3) =  4.48416e-44
( 5, 1, 3) =  0
( 6, 1, 3) =  1.3749e-37
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 443
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 370
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 563
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 436
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 377
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 571
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 443
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 589
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 391
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 602
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 611
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 400
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 618
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 407
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 632
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 418
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 425
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 436
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 443
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 455
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 462
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 472
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 455
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        =   PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 462
no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13b4dc0:
            rank = 2, typekind = 6, base_addr = 0x13b55a0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  2.32406e-310
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 472
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 455
(10, 1) =  2.32406e-310
(11, 1) =  1.02102e-316
(12, 1) =  1.02102e-316
(13, 1) =  1.9098e-313
(14, 1) =  2.3342e-313
(15, 1) =  2.75859e-313
( 9, 2) =  3.18299e-313
(10, 2) =  3.60739e-313
(11, 2) =  4.03179e-313
  skipping to end ...
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object =   PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 462
(13,11) =  9.54898e-313
(14,11) =  9.97338e-313
(15,11) =  1.03978e-312
( 9,12) =  1.08222e-312
(10,12) =  1.12466e-312
(11,12) =  1.1671e-312
Ready
 Proxy        = no
 Root Info (Attributes):
{}(12,12) =  1.20954e-312
(13,12) =  1.25198e-312
(14,12) =  3.07689e-312
(15,12) =  3.11933e-312
dim 1: [0]: [9 [10 [9, 15] 13] 15]
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xcc65a0:
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 479
            rank = 2, typekind = 6, base_addr = 0xcc6d80
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  2.34819e-310
(10,13) =  2.34819e-310
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 472
(11,13) =  6.61918e-317
(12,13) =  6.61918e-317
(13,13) =  4.24399e-313
(14,13) =  4.66839e-313
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 486
(15,13) =  5.09279e-313
( 9,14) =  5.51719e-313
(10,14) =  5.94159e-313
(11,14) =  6.36599e-313
  skipping to end ...
--- ESMCI::Array::print start ---
 Base name    = (13,22) =  6.36599e-312
(14,22) =  6.40843e-312
(15,22) =  6.45087e-312
( 9,23) =  6.49331e-312
(10,23) =  6.53575e-312
MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
(11,23) =  6.57819e-312
(12,23) =  6.62063e-312
(13,23) =  6.66307e-312
(14,23) =  6.70551e-312
(15,23) =  6.74795e-312
dim 1: [0]: [9 [10 [9, 15] 13] 15]
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 479
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x23b1d00:
            rank = 2, typekind = 6, base_addr = 0x23b5aa0
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  2.3319e-310
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 495
( 2, 1) =  2.3319e-310
( 3, 1) =  1.84999e-316
( 4, 1) =  1.84999e-316
( 5, 1) =  2.3319e-310
( 6, 1) =  1.84993e-316
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 486
( 7, 1) =  2.75859e-313
( 8, 1) =  3.18299e-313
( 1, 2) =  3.60739e-313
( 2, 2) =  4.03179e-313
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,   skipping to end ...
( 7,11) =  4.26521e-312
( 8,11) =  4.30765e-312
( 1,12) =  4.35009e-312
( 2,12) =  4.39253e-312
 object = Ready
 Proxy        = no
 Root Info (Attributes):
( 3,12) =  4.43497e-312
( 4,12) =  4.47741e-312
( 5,12) =  4.51985e-312
( 6,12) =  4.56229e-312
( 7,12) =  6.64185e-312
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
( 8,12) =  6.68429e-312
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
LocalArrayPrint: Array at address 0x13b4dc0:
            rank = 2, typekind = 6, base_addr = 0x13b55a0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 479
( 9, 1) =  2.32406e-310
(10, 1) =  2.32406e-310
(11, 1) =  1.02102e-316
(12, 1) =  1.02102e-316
(13, 1) =  1.9098e-313
(14, 1) =  2.3342e-313
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 495
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 486
(15, 1) =  2.75859e-313
( 9, 2) =  3.18299e-313
(10, 2) =  3.60739e-313
(11, 2) =  4.03179e-313
  skipping to end ...
(13,11) =  9.54898e-313
(14,11) =  9.97338e-313
(15,11) =  1.03978e-312
( 9,12) =  1.08222e-312
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
(10,12) =  1.12466e-312
(11,12) =  1.1671e-312
(12,12) =  1.20954e-312
(13,12) =  1.25198e-312
(14,12) =  3.07689e-312
 Proxy        = no
 Root Info (Attributes):
{}(15,12) =  3.11933e-312
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xcc4f90:
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 502
            rank = 2, typekind = 6, base_addr = 0xcc65a0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9,13) =  2.34819e-310
(10,13) =  2.34819e-310
(11,13) =  0
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 495
(12,13) =  0
(13,13) =  0
(14,13) =  1.9098e-313
(15,13) =  2.122e-314
( 9,14) =  2.122e-314
(10,14) =  2.122e-314
(11,14) =  4.88059e-313
  skipping to end ...
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge(13,23) =  7.34629e+223
(14,23) =  2.18186e+243
(15,23) =  9.83243e+24

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):( 9,24) =  7.90586e+25
(10,24) =  1.814e-153
(11,24) =  1.37708e+93

{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 515
(12,24) =  4.83246e+276
(13,24) =  7.58464e+179
(14,24) =  1.20644e+30
(15,24) =  3.94357e+180
dim 1: [0]: [9 [9 [9, 15] 13] 15]
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x23b1d00:
            rank = 2, typekind = 6, base_addr = 0x23b5aa0
            dim[0] = 8  dim[1] = 12  
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 525
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 502
  Real, *8, Dim 2, Data values:
( 1, 1) =  2.3319e-310
( 2, 1) =  2.3319e-310
( 3, 1) =  1.84999e-316
( 4, 1) =  1.84999e-316
( 5, 1) =  2.3319e-310
( 6, 1) =  1.84993e-316
( 7, 1) =  2.75859e-313
( 8, 1) =  3.18299e-313
( 1, 2) =  3.60739e-313
( 2, 2) =  4.03179e-313
  skipping to end ...
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 534
( 7,11) =  4.26521e-312
( 8,11) =  4.30765e-312
( 1,12) =  4.35009e-312
( 2,12) =  4.39253e-312
( 3,12) =  4.43497e-312
( 4,12) =  4.47741e-312
( 5,12) =  4.51985e-312
( 6,12) =  4.56229e-312
( 7,12) =  6.64185e-312
( 8,12) =  6.68429e-312
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 502
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 525
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 534
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 525
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 544
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 534
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13b2c50:
            rank = 2, typekind = 6, base_addr = 0x13b55a0
            dim[0] = 11  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 8,-1) =  2.32406e-310
( 9,-1) =  2.32406e-310
(10,-1) =  1.02102e-316
(11,-1) =  1.02102e-316
(12,-1) =  1.9098e-313
(13,-1) =  2.3342e-313
(14,-1) =  2.75859e-313
(15,-1) =  3.18299e-313
(16,-1) =  3.60739e-313
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 544
(17,-1) =  4.03179e-313
  skipping to end ...
( 9,16) =  8.74485e+199
(10,16) =  7.22941e+159
(11,16) =  9.77635e+24
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready(12,16) =  2.59339e+161
(13,16) =  8.9119e+35
(14,16) =  6.57947e-85
,  object = Ready
 Proxy        = no
 Root Info (Attributes):
(15,16) =  7.35162e+223
(16,16) =  1.08671e-312
(17,16) =  2.84347e-312
(18,16) =  3.32506e-321
dim 1: [0]: [8 [9 [9, 15] 13] 18]
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 551
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xcc4f90:
            rank = 2, typekind = 6, base_addr = 0xcc36e0
            dim[0] = 11  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 8,11) =  2.34819e-310
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 544
( 9,11) =  2.34819e-310
(10,11) =  6.61227e-317
(11,11) =  6.61227e-317
(12,11) =  2.10424e+122
(13,11) =  6.21989e+88
(14,11) =  1.38497e+219
(15,11) =  9.08367e+223
(16,11) =  6.60856e+265
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready, (17,11) =  1.30494e+180
  skipping to end ...
( 9,27) =  0
(10,27) =  0
(11,27) =  0
 object = Ready
 Proxy        = no
 Root Info (Attributes):
(12,27) =  0
(13,27) =  0
(14,27) =  0
(15,27) =  0
(16,27) =  0
(17,27) =  0
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 563
(18,27) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 551
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x23b2420:
            rank = 2, typekind = 6, base_addr = 0x23b37d0
            dim[0] = 12  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 0,-1) =  2.3319e-310
( 1,-1) =  2.3319e-310
( 2,-1) =  1.84955e-316
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 571
( 3,-1) =  1.84955e-316
( 4,-1) =  1.96098e+243
( 5,-1) =  3.34378e+20
( 6,-1) =  8.74485e+199
( 7,-1) =  7.22941e+159
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 585
( 8,-1) =  9.77635e+24
( 9,-1) =  2.59339e+161
  skipping to end ...
( 2,16) =  0
( 3,16) =  0
( 4,16) =  0
( 5,16) =  0
( 6,16) =  0
( 7,16) =  0
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 602
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 563
( 8,16) =  0
( 9,16) =  0
(10,16) =  0
(11,16) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 551
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 571
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 611
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 563
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 602
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 618
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 571
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 581
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 632
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 611
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 602
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 618
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 611
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 632
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 618
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 632
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 642
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 642
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 642
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 642
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 654
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 654
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 654
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 654
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 672
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 672
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 672
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 672
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 691
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 691
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 691
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 691
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 713
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 713
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 713
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 713
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 726
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 726
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 726
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 726
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 756
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 756
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 756
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 756
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 767
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 767
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 767
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 767
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 789
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 789
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 789
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 789
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 796
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 796
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 796
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 796
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 803
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 803
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 803
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 803
--- ESMCI::Array::print start ------ ESMCI::Array::print start ---
 Base name    = Array020
--- ESMCI::Array::print start ---
 Base name    = Array020
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Base name    = Array020
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = Array020
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):

{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xccde50:
            rank = 1, typekind = 6, base_addr = 0x7ffe2d3408a0
            {}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x23b9eb0:
            rank = 1, typekind = 6, base_addr = 0x7ffc80ee0b50
            ~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13bb950:
            rank = 1, typekind = 6, base_addr = 0x7ffcc3f5adb0
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  2.32406e-310
( 2) =  2.32406e-310
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x19e7d60:
            rank = 1, typekind = 6, base_addr = 0x7ffd9df3e330
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  2.36445e-310
( 2) =  2.36445e-310
dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  2.34819e-310
( 2) =  2.34819e-310
( 3) =  6.14386e+39
( 4) =  2.34819e-310
( 5) =  0
( 6) =  2.34819e-310
dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  2.3319e-310
( 2) =  2.3319e-310
( 3) =  6.14386e+39
( 4) =  2.3319e-310
( 5) =  0
( 3) =  6.14386e+39
( 4) =  2.32406e-310
( 5) =  0
( 6) =  2.32406e-310
( 7) =  2.32406e-310
( 8) =  2.32406e-310
( 9) =  -8.34488e-309
(10) =  2.32406e-310
( 3) =  6.14386e+39
( 4) =  2.36445e-310
( 5) =  0
( 6) =  2.36445e-310
( 7) =  2.36445e-310
( 8) =  2.36445e-310
( 9) =  -8.34488e-309
(10) =  2.36445e-310
( 7) =  2.34819e-310
( 8) =  2.34819e-310
( 9) =  -8.34488e-309
(10) =  2.34819e-310
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 810
( 6) =  2.3319e-310
( 7) =  2.3319e-310
( 8) =  2.3319e-310
( 9) =  -8.34488e-309
(10) =  2.3319e-310
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 810
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 810
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 810
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 817
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 817
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 817
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 817
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 826
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 826
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 826
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 826
--- ESMCI::Array::print start ---
 Base name    = Array021
 Status: Base = --- ESMCI::Array::print start ---
Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = Array021
 Status: Base = Ready,  Base name    = Array021
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = Array021
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xccde50:
            rank = 1, typekind = 6, base_addr = 0x7ffe2d3408a0
             object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13bb950:
            rank = 1, typekind = 6, base_addr = 0x7ffcc3f5adb0
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x19e7ce0:
            rank = 1, typekind = 6, base_addr = 0x7ffd9df3e330
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  2.34819e-310
( 2) =  2.34819e-310
( 3) =  6.14386e+39
( 4) =  2.34819e-310
( 5) =  0
( 6) =  2.34819e-310
( 7) =  2.34819e-310
( 8) =  2.34819e-310
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x23b9eb0:
            rank = 1, typekind = 6, base_addr = 0x7ffc80ee0b50
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  2.3319e-310
( 2) =  2.3319e-310
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  2.32406e-310
( 2) =  2.32406e-310
( 3) =  6.14386e+39
( 4) =  2.32406e-310
( 5) =  0
( 6) =  2.32406e-310
dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  2.36445e-310
( 2) =  2.36445e-310
( 3) =  6.14386e+39
( 4) =  2.36445e-310
( 5) =  0
( 6) =  2.36445e-310
( 7) =  2.36445e-310
( 9) =  -8.34488e-309
(10) =  2.34819e-310
dim 1: [0]: [1 [1 [1, 10] 9] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 833
( 3) =  6.14386e+39
( 4) =  2.3319e-310
( 5) =  0
( 6) =  2.3319e-310
( 7) =  2.3319e-310
( 8) =  2.3319e-310
( 9) =  -8.34488e-309
(10) =  2.3319e-310
( 7) =  2.32406e-310
( 8) =  2.32406e-310
( 9) =  -8.34488e-309
(10) =  2.32406e-310
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 833
( 8) =  2.36445e-310
( 9) =  -8.34488e-309
(10) =  2.36445e-310
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 833
dim 1: [0]: [1 [2 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 833
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 840
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 840
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 840
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 840
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 859
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 859
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 859
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 859
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 866
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 866
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 866
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 866
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 873
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 873
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 873
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 873
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 880
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 880
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 880
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 880
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 899
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 899
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 899
  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 899
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 906
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 906
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 906
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 906
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 913
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 913
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 913
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 913
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 932
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 932
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 932
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 932
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 939
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 939
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 939
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 939
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 946
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 946
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 946
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 946
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1007
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1007
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1007
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1007
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1036
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1036
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1036
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1036
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1055
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1055
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1055
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1055
--- ESMCI::Array::print start ---
 Base name    = MyArray
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = --- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1062
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1062
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1062
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x23bf3e0:
            rank = 1, typekind = 6, base_addr = 0x23bd020
            dim[0] = 4  
  Real, *8, Dim 1, Data values:
( 1) =  1.85151e-316
( 2) =  2.122e-314
( 3) =  0
( 4) =  0
dim 1: [0]: [1 [1 [1, 4] 4] 4]
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1069
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1069
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1069
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1062
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1069
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1085
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1085
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1085
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1092
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1092
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1092
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1085
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1092
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1120
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1120
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1120
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1127
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1127
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1127
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1120
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1137
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1137
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1127
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1137
  PET           1  Test Elapsed Time    6.4570000000000007       msec.
  PET           3  Test Elapsed Time    6.4710000000000010       msec.
  PET           0  Test Elapsed Time    6.2079999999999984       msec.
  PET           2  Test Elapsed Time    7.3499999999999988       msec.
